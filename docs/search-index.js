crystal_doc_search_index_callback({"repository_name":"github.com/OisinA/AzulaCr","body":"## Azula\n\nAzula is a strongly-typed compiled language, using an LLVM backend, with the following goals:\n- Static typing\n- Easy-to-read syntax\n- Efficient execution\n\n[Documentation](https://azula-lang.github.io/azula/#/)\n\n-- Very early stages of development --\n\n### Origin\n\nAzula started as a learning exercise through the [Writing a Interpreter in Go](https://interpreterbook.com) and [Writing a Compiler in Go](https://compilerbook.com) books by Thorsten Ball. As I reached the end of the compiler, rather than expanding the VM for Azula, I decided compiling to LLVM would make the language far more usable. Rather than attempting to change the version written in Go, I decided to rewrite Azula from scratch in Crystal.\n\n### Goals\n\n- ~~Tokenizer~~\n- ~~Lexer~~\n- ~~Parser~~\n- Compiler\n- Write documentation in code\n- Compiler Optimization\n- Standard Library\n- Self-hosting compiler\n\n## Compiling\n```\nazula build FILENAME\n```\n\nor to run directly:\n```\nazula run FILENAME\n```\n\nor to view the LLIR output:\n```\nazula llir FILENAME\n```\n\n### Example Code\n\n```\nfunc fib(int x): int {\n    if(x == 0 or x == 1) {\n        return x;\n    }\n    return fib(x - 1) + fib(x - 2);\n}\n\nfunc main(): void {\n    print(fib(15));\n}\n```\n\n## Contributors\n- [OisinA](https://github.com/OisinA)\n","program":{"html_id":"github.com/OisinA/AzulaCr/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"github.com/OisinA/AzulaCr","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"PROMPT","name":"PROMPT","value":"\">> \"","doc":null,"summary":null},{"id":"VERSION","name":"VERSION","value":"\"0.3.0\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[{"id":"convert_and_check_nil(val)-macro","html_id":"convert_and_check_nil(val)-macro","name":"convert_and_check_nil","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":""}],"args_string":"(val)","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/types/typechecker.cr#L10","def":{"name":"convert_and_check_nil","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    node = node.as?(AST::\n{{ val }}\n)\n    return_if_nil node\n\n"}},{"id":"expect_peek_return(token_type)-macro","html_id":"expect_peek_return(token_type)-macro","name":"expect_peek_return","doc":"If peek token isn't token_type, return out of function","summary":"<p>If peek token isn't token_type, return out of function</p>","abstract":false,"args":[{"name":"token_type","doc":null,"default_value":"","external_name":"token_type","restriction":""}],"args_string":"(token_type)","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/parser/parser.cr#L17","def":{"name":"expect_peek_return","args":[{"name":"token_type","doc":null,"default_value":"","external_name":"token_type","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    if !self.expect_peek TokenType::\n{{ token_type }}\n\n        return\n    \nend\n\n"}},{"id":"nil_return(var)-macro","html_id":"nil_return(var)-macro","name":"nil_return","doc":"If var is nil, return out of function","summary":"<p>If var is nil, return out of function</p>","abstract":false,"args":[{"name":"var","doc":null,"default_value":"","external_name":"var","restriction":""}],"args_string":"(var)","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/parser/parser.cr#L24","def":{"name":"nil_return","args":[{"name":"var","doc":null,"default_value":"","external_name":"var","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    if \n{{ var }}\n.nil?\n        return\n    \nend\n\n"}},{"id":"register_infix(token_type,method_name)-macro","html_id":"register_infix(token_type,method_name)-macro","name":"register_infix","doc":"Add an infix handler","summary":"<p>Add an infix handler</p>","abstract":false,"args":[{"name":"token_type","doc":null,"default_value":"","external_name":"token_type","restriction":""},{"name":"method_name","doc":null,"default_value":"","external_name":"method_name","restriction":""}],"args_string":"(token_type, method_name)","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/parser/parser.cr#L12","def":{"name":"register_infix","args":[{"name":"token_type","doc":null,"default_value":"","external_name":"token_type","restriction":""},{"name":"method_name","doc":null,"default_value":"","external_name":"method_name","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    @infix_funcs[TokenType::\n{{ token_type }}\n] = ->(\nexp: AST::Expression)\n{ self.\n{{ method_name }}\n(\nexp).as(AST::Expression?)}\n\n"}},{"id":"register_prefix(token_type,method_name)-macro","html_id":"register_prefix(token_type,method_name)-macro","name":"register_prefix","doc":"Add a prefix handler","summary":"<p>Add a prefix handler</p>","abstract":false,"args":[{"name":"token_type","doc":null,"default_value":"","external_name":"token_type","restriction":""},{"name":"method_name","doc":null,"default_value":"","external_name":"method_name","restriction":""}],"args_string":"(token_type, method_name)","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/parser/parser.cr#L7","def":{"name":"register_prefix","args":[{"name":"token_type","doc":null,"default_value":"","external_name":"token_type","restriction":""},{"name":"method_name","doc":null,"default_value":"","external_name":"method_name","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    @prefix_funcs[TokenType::\n{{ token_type }}\n] = ->\n{ self.\n{{ method_name }}\n.as(AST::Expression?)}\n\n"}},{"id":"return_if_nil(val)-macro","html_id":"return_if_nil(val)-macro","name":"return_if_nil","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":""}],"args_string":"(val)","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/types/typechecker.cr#L4","def":{"name":"return_if_nil","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    if \n{{ val }}\n.nil?\n        return\n    \nend\n\n"}},{"id":"type_or_literal-macro","html_id":"type_or_literal-macro","name":"type_or_literal","doc":"Add the current_token to types, whether its a type or a string","summary":"<p>Add the current_token to types, whether its a type or a string</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/parser/parser.cr#L31","def":{"name":"type_or_literal","args":[],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    type = Types::Type.parse? @current_token.literal\n    if type.nil?\n        types << @current_token.literal\n    \nelse\n        types << type\n    \nend\n\n"}}],"types":[{"html_id":"github.com/OisinA/AzulaCr/Azula","path":"Azula.html","kind":"module","full_name":"Azula","name":"Azula","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"azula/token/token.cr","line_number":1,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/token/token.cr"},{"filename":"azula/lexer/lexer.cr","line_number":3,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/lexer/lexer.cr"},{"filename":"azula/ast/ast.cr","line_number":1,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/ast.cr"},{"filename":"azula/types/types.cr","line_number":1,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/types/types.cr"},{"filename":"azula/ast/identifier.cr","line_number":5,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/identifier.cr"},{"filename":"azula/ast/assign.cr","line_number":5,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/assign.cr"},{"filename":"azula/ast/block.cr","line_number":4,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/block.cr"},{"filename":"azula/ast/expression_statement.cr","line_number":4,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/expression_statement.cr"},{"filename":"azula/ast/function.cr","line_number":7,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/function.cr"},{"filename":"azula/ast/function_call.cr","line_number":5,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/function_call.cr"},{"filename":"azula/ast/if.cr","line_number":5,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/if.cr"},{"filename":"azula/ast/infix.cr","line_number":4,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/infix.cr"},{"filename":"azula/ast/literal.cr","line_number":4,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/literal.cr"},{"filename":"azula/ast/macro.cr","line_number":7,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/macro.cr"},{"filename":"azula/ast/prefix.cr","line_number":4,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/prefix.cr"},{"filename":"azula/ast/program.cr","line_number":3,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/program.cr"},{"filename":"azula/ast/return.cr","line_number":4,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/return.cr"},{"filename":"azula/ast/struct.cr","line_number":5,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/struct.cr"},{"filename":"azula/ast/struct_access.cr","line_number":4,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/struct_access.cr"},{"filename":"azula/ast/while.cr","line_number":5,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/while.cr"},{"filename":"azula/types/typechecker.cr","line_number":15,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/types/typechecker.cr"},{"filename":"azula/parser/parser.cr","line_number":40,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/parser/parser.cr"},{"filename":"azula/compiler/visitors/visitor.cr","line_number":5,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/visitor.cr"},{"filename":"azula/compiler/visitors/assign.cr","line_number":5,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/assign.cr"},{"filename":"azula/compiler/visitors/block.cr","line_number":5,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/block.cr"},{"filename":"azula/compiler/visitors/expression_statement.cr","line_number":5,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/expression_statement.cr"},{"filename":"azula/compiler/visitors/function.cr","line_number":6,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/function.cr"},{"filename":"azula/compiler/visitors/function_call.cr","line_number":6,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/function_call.cr"},{"filename":"azula/compiler/visitors/identifier.cr","line_number":5,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/identifier.cr"},{"filename":"azula/compiler/visitors/if.cr","line_number":5,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/if.cr"},{"filename":"azula/compiler/visitors/infix.cr","line_number":5,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/infix.cr"},{"filename":"azula/compiler/visitors/literals.cr","line_number":6,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/literals.cr"},{"filename":"azula/compiler/visitors/program.cr","line_number":5,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/program.cr"},{"filename":"azula/compiler/visitors/return.cr","line_number":5,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/return.cr"},{"filename":"azula/compiler/visitors/struct.cr","line_number":6,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/struct.cr"},{"filename":"azula/compiler/visitors/while.cr","line_number":6,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/while.cr"},{"filename":"azula/compiler/compiler.cr","line_number":6,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/compiler.cr"},{"filename":"azula.cr","line_number":7,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula.cr"}],"repository_name":"github.com/OisinA/AzulaCr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"Keywords","name":"Keywords","value":"{\"int\" => TokenType::TYPE, \"bool\" => TokenType::TYPE, \"string\" => TokenType::TYPE, \"float\" => TokenType::TYPE, \"error\" => TokenType::TYPE, \"void\" => TokenType::TYPE, \"func\" => TokenType::FUNCTION, \"return\" => TokenType::RETURN, \"macro\" => TokenType::MACRO, \"as\" => TokenType::AS, \"struct\" => TokenType::STRUCT, \"true\" => TokenType::TRUE, \"false\" => TokenType::FALSE, \"null\" => TokenType::NULL, \"or\" => TokenType::OR, \"and\" => TokenType::AND, \"if\" => TokenType::IF, \"elseif\" => TokenType::ELSEIF, \"else\" => TokenType::ELSE, \"switch\" => TokenType::SWITCH, \"default\" => TokenType::DEFAULT, \"while\" => TokenType::WHILE}","doc":"Keyword string to its TokenType","summary":"<p>Keyword string to its TokenType</p>"},{"id":"Precedences","name":"Precedences","value":"{TokenType::OR => OperatorPrecedence::COMPARISON, TokenType::AND => OperatorPrecedence::COMPARISON, TokenType::EQ => OperatorPrecedence::EQUALS, TokenType::NOT_EQ => OperatorPrecedence::EQUALS, TokenType::LT => OperatorPrecedence::LESS_GREATER, TokenType::LT_EQ => OperatorPrecedence::LESS_GREATER, TokenType::GT => OperatorPrecedence::LESS_GREATER, TokenType::GT_EQ => OperatorPrecedence::LESS_GREATER, TokenType::PLUS => OperatorPrecedence::SUM, TokenType::MINUS => OperatorPrecedence::SUM, TokenType::SLASH => OperatorPrecedence::PRODUCT, TokenType::ASTERISK => OperatorPrecedence::PRODUCT, TokenType::EXPONENT => OperatorPrecedence::PRODUCT, TokenType::MODULO => OperatorPrecedence::PRODUCT, TokenType::LBRACKET => OperatorPrecedence::CALL, TokenType::LBRACE => OperatorPrecedence::CALL, TokenType::DOT => OperatorPrecedence::ACCESS}","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"Azula is a strongly-typed compiled language, using an LLVM backend","summary":"<p>Azula is a strongly-typed compiled language, using an LLVM backend</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/OisinA/AzulaCr/Azula/AST","path":"Azula/AST.html","kind":"module","full_name":"Azula::AST","name":"AST","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"azula/ast/ast.cr","line_number":3,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/ast.cr"},{"filename":"azula/ast/identifier.cr","line_number":6,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/identifier.cr"},{"filename":"azula/ast/assign.cr","line_number":6,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/assign.cr"},{"filename":"azula/ast/block.cr","line_number":5,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/block.cr"},{"filename":"azula/ast/expression_statement.cr","line_number":5,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/expression_statement.cr"},{"filename":"azula/ast/function.cr","line_number":8,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/function.cr"},{"filename":"azula/ast/function_call.cr","line_number":6,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/function_call.cr"},{"filename":"azula/ast/if.cr","line_number":6,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/if.cr"},{"filename":"azula/ast/infix.cr","line_number":5,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/infix.cr"},{"filename":"azula/ast/literal.cr","line_number":5,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/literal.cr"},{"filename":"azula/ast/macro.cr","line_number":8,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/macro.cr"},{"filename":"azula/ast/prefix.cr","line_number":5,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/prefix.cr"},{"filename":"azula/ast/program.cr","line_number":4,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/program.cr"},{"filename":"azula/ast/return.cr","line_number":5,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/return.cr"},{"filename":"azula/ast/struct.cr","line_number":6,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/struct.cr"},{"filename":"azula/ast/struct_access.cr","line_number":5,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/struct_access.cr"},{"filename":"azula/ast/while.cr","line_number":6,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/while.cr"}],"repository_name":"github.com/OisinA/AzulaCr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/OisinA/AzulaCr/Azula","kind":"module","full_name":"Azula","name":"Azula"},"doc":"AST contains classes for each node","summary":"<p>AST contains classes for each node</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Assign","path":"Azula/AST/Assign.html","kind":"class","full_name":"Azula::AST::Assign","name":"Assign","abstract":false,"superclass":{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Statement","kind":"class","full_name":"Azula::AST::Statement","name":"Statement"},"ancestors":[{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Statement","kind":"class","full_name":"Azula::AST::Statement","name":"Statement"},{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Node","kind":"class","full_name":"Azula::AST::Node","name":"Node"},{"html_id":"github.com/OisinA/AzulaCr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/OisinA/AzulaCr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"azula/ast/assign.cr","line_number":10,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/assign.cr"}],"repository_name":"github.com/OisinA/AzulaCr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/OisinA/AzulaCr/Azula/AST","kind":"module","full_name":"Azula::AST","name":"AST"},"doc":"An Assign statement is used to give identifier(s) value(s). \nIt has a list of identifiers, either typed or not. Non-typed identifiers are used for reassigning a variable.","summary":"<p>An Assign statement is used to give identifier(s) value(s).</p>","class_methods":[],"constructors":[{"id":"new(token,idents,values)-class-method","html_id":"new(token,idents,values)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""},{"name":"idents","doc":null,"default_value":"","external_name":"idents","restriction":""},{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":""}],"args_string":"(token, idents, values)","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/assign.cr#L16","def":{"name":"new","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""},{"name":"idents","doc":null,"default_value":"","external_name":"idents","restriction":""},{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(token, idents, values)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"idents:Array(Azula::AST::Node)-instance-method","html_id":"idents:Array(Azula::AST::Node)-instance-method","name":"idents","doc":"Get the list of `Identifier` or `TypedIdentifier` in this statement.","summary":"<p>Get the list of <code><a href=\"../../Azula/AST/Identifier.html\">Identifier</a></code> or <code><a href=\"../../Azula/AST/TypedIdentifier.html\">TypedIdentifier</a></code> in this statement.</p>","abstract":false,"args":[],"args_string":" : Array(Azula::AST::Node)","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/assign.cr#L41","def":{"name":"idents","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@idents"}},{"id":"to_string:String-instance-method","html_id":"to_string:String-instance-method","name":"to_string","doc":"The literal string representation of this node.","summary":"<p>The literal string representation of this node.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/assign.cr#L25","def":{"name":"to_string","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"s = \"\"\n@idents.each do |ident|\n  s = s + \"#{ident.to_string}, \"\nend\ns = s[0, s.size - 2] + \" = \"\n@values.each do |value|\n  s = s + \"#{value.to_string}, \"\nend\ns = s[0, s.size - 2]\n"}},{"id":"token:Azula::Token-instance-method","html_id":"token:Azula::Token-instance-method","name":"token","doc":"Get the `Token` in this node.","summary":"<p>Get the <code><a href=\"../../Azula/Token.html\">Token</a></code> in this node.</p>","abstract":false,"args":[],"args_string":" : Azula::Token","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/assign.cr#L39","def":{"name":"token","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@token"}},{"id":"token_literal:String-instance-method","html_id":"token_literal:String-instance-method","name":"token_literal","doc":"The literal token representation of this node.","summary":"<p>The literal token representation of this node.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/assign.cr#L20","def":{"name":"token_literal","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"return @token.literal"}},{"id":"values:Array(Azula::AST::Expression)-instance-method","html_id":"values:Array(Azula::AST::Expression)-instance-method","name":"values","doc":"Get the list of values `Expression` in this statement.","summary":"<p>Get the list of values <code><a href=\"../../Azula/AST/Expression.html\">Expression</a></code> in this statement.</p>","abstract":false,"args":[],"args_string":" : Array(Azula::AST::Expression)","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/assign.cr#L43","def":{"name":"values","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@values"}}],"macros":[],"types":[]},{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Block","path":"Azula/AST/Block.html","kind":"class","full_name":"Azula::AST::Block","name":"Block","abstract":false,"superclass":{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Statement","kind":"class","full_name":"Azula::AST::Statement","name":"Statement"},"ancestors":[{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Statement","kind":"class","full_name":"Azula::AST::Statement","name":"Statement"},{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Node","kind":"class","full_name":"Azula::AST::Node","name":"Node"},{"html_id":"github.com/OisinA/AzulaCr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/OisinA/AzulaCr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"azula/ast/block.cr","line_number":7,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/block.cr"}],"repository_name":"github.com/OisinA/AzulaCr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/OisinA/AzulaCr/Azula/AST","kind":"module","full_name":"Azula::AST","name":"AST"},"doc":"Block statement is for a group of statements.","summary":"<p>Block statement is for a group of statements.</p>","class_methods":[],"constructors":[{"id":"new(token,statements)-class-method","html_id":"new(token,statements)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""},{"name":"statements","doc":null,"default_value":"","external_name":"statements","restriction":""}],"args_string":"(token, statements)","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/block.cr#L12","def":{"name":"new","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""},{"name":"statements","doc":null,"default_value":"","external_name":"statements","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(token, statements)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"statements:Array(Azula::AST::Statement)-instance-method","html_id":"statements:Array(Azula::AST::Statement)-instance-method","name":"statements","doc":"Get the list of `Statement` in this block.","summary":"<p>Get the list of <code><a href=\"../../Azula/AST/Statement.html\">Statement</a></code> in this block.</p>","abstract":false,"args":[],"args_string":" : Array(Azula::AST::Statement)","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/block.cr#L32","def":{"name":"statements","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@statements"}},{"id":"to_string:String-instance-method","html_id":"to_string:String-instance-method","name":"to_string","doc":"The literal string representation of this node.","summary":"<p>The literal string representation of this node.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/block.cr#L21","def":{"name":"to_string","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"output = \"\"\n@statements.each do |statement|\n  output = output + (statement.to_string + \"\\n\")\nend\nreturn output\n"}},{"id":"token:Azula::Token-instance-method","html_id":"token:Azula::Token-instance-method","name":"token","doc":"Get the `Token` in this node.","summary":"<p>Get the <code><a href=\"../../Azula/Token.html\">Token</a></code> in this node.</p>","abstract":false,"args":[],"args_string":" : Azula::Token","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/block.cr#L30","def":{"name":"token","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@token"}},{"id":"token_literal:String-instance-method","html_id":"token_literal:String-instance-method","name":"token_literal","doc":"The literal token representation of this node.","summary":"<p>The literal token representation of this node.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/block.cr#L16","def":{"name":"token_literal","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"return @token.literal"}}],"macros":[],"types":[]},{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/BooleanLiteral","path":"Azula/AST/BooleanLiteral.html","kind":"class","full_name":"Azula::AST::BooleanLiteral","name":"BooleanLiteral","abstract":false,"superclass":{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Expression","kind":"class","full_name":"Azula::AST::Expression","name":"Expression"},"ancestors":[{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Expression","kind":"class","full_name":"Azula::AST::Expression","name":"Expression"},{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Node","kind":"class","full_name":"Azula::AST::Node","name":"Node"},{"html_id":"github.com/OisinA/AzulaCr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/OisinA/AzulaCr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"azula/ast/literal.cr","line_number":60,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/literal.cr"}],"repository_name":"github.com/OisinA/AzulaCr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/OisinA/AzulaCr/Azula/AST","kind":"module","full_name":"Azula::AST","name":"AST"},"doc":"A literal boolean value, either `true` or `false`.","summary":"<p>A literal boolean value, either <code>true</code> or <code>false</code>.</p>","class_methods":[],"constructors":[{"id":"new(token,value)-class-method","html_id":"new(token,value)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(token, value)","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/literal.cr#L65","def":{"name":"new","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(token, value)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"to_string:String-instance-method","html_id":"to_string:String-instance-method","name":"to_string","doc":"The literal string representation of this node.","summary":"<p>The literal string representation of this node.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/literal.cr#L74","def":{"name":"to_string","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"return \"#{@value}\""}},{"id":"token:Azula::Token-instance-method","html_id":"token:Azula::Token-instance-method","name":"token","doc":"Get the `Token` in this node.","summary":"<p>Get the <code><a href=\"../../Azula/Token.html\">Token</a></code> in this node.</p>","abstract":false,"args":[],"args_string":" : Azula::Token","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/literal.cr#L79","def":{"name":"token","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@token"}},{"id":"token_literal:String-instance-method","html_id":"token_literal:String-instance-method","name":"token_literal","doc":"The literal token representation of this node.","summary":"<p>The literal token representation of this node.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/literal.cr#L69","def":{"name":"token_literal","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"return @token.literal"}},{"id":"value:Bool-instance-method","html_id":"value:Bool-instance-method","name":"value","doc":"Get the native Crystal `Boolean` value of this node.","summary":"<p>Get the native Crystal <code>Boolean</code> value of this node.</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/literal.cr#L81","def":{"name":"value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@value"}}],"macros":[],"types":[]},{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Expression","path":"Azula/AST/Expression.html","kind":"class","full_name":"Azula::AST::Expression","name":"Expression","abstract":true,"superclass":{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Node","kind":"class","full_name":"Azula::AST::Node","name":"Node"},"ancestors":[{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Node","kind":"class","full_name":"Azula::AST::Node","name":"Node"},{"html_id":"github.com/OisinA/AzulaCr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/OisinA/AzulaCr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"azula/ast/ast.cr","line_number":15,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/ast.cr"}],"repository_name":"github.com/OisinA/AzulaCr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/BooleanLiteral","kind":"class","full_name":"Azula::AST::BooleanLiteral","name":"BooleanLiteral"},{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/FloatLiteral","kind":"class","full_name":"Azula::AST::FloatLiteral","name":"FloatLiteral"},{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/FunctionCall","kind":"class","full_name":"Azula::AST::FunctionCall","name":"FunctionCall"},{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Identifier","kind":"class","full_name":"Azula::AST::Identifier","name":"Identifier"},{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Infix","kind":"class","full_name":"Azula::AST::Infix","name":"Infix"},{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/IntegerLiteral","kind":"class","full_name":"Azula::AST::IntegerLiteral","name":"IntegerLiteral"},{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Prefix","kind":"class","full_name":"Azula::AST::Prefix","name":"Prefix"},{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/StringLiteral","kind":"class","full_name":"Azula::AST::StringLiteral","name":"StringLiteral"},{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/StructAccess","kind":"class","full_name":"Azula::AST::StructAccess","name":"StructAccess"},{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/StructInitialise","kind":"class","full_name":"Azula::AST::StructInitialise","name":"StructInitialise"}],"including_types":[],"namespace":{"html_id":"github.com/OisinA/AzulaCr/Azula/AST","kind":"module","full_name":"Azula::AST","name":"AST"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/ExpressionStatement","path":"Azula/AST/ExpressionStatement.html","kind":"class","full_name":"Azula::AST::ExpressionStatement","name":"ExpressionStatement","abstract":false,"superclass":{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Statement","kind":"class","full_name":"Azula::AST::Statement","name":"Statement"},"ancestors":[{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Statement","kind":"class","full_name":"Azula::AST::Statement","name":"Statement"},{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Node","kind":"class","full_name":"Azula::AST::Node","name":"Node"},{"html_id":"github.com/OisinA/AzulaCr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/OisinA/AzulaCr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"azula/ast/expression_statement.cr","line_number":9,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/expression_statement.cr"}],"repository_name":"github.com/OisinA/AzulaCr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/OisinA/AzulaCr/Azula/AST","kind":"module","full_name":"Azula::AST","name":"AST"},"doc":"Expression statements are for when an expression is not assigned or inside a statement.\nAn example of an expression statement would be a function that returns a value, but it is not assigned to anything.","summary":"<p>Expression statements are for when an expression is not assigned or inside a statement.</p>","class_methods":[],"constructors":[{"id":"new(token,expression)-class-method","html_id":"new(token,expression)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""},{"name":"expression","doc":null,"default_value":"","external_name":"expression","restriction":""}],"args_string":"(token, expression)","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/expression_statement.cr#L14","def":{"name":"new","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""},{"name":"expression","doc":null,"default_value":"","external_name":"expression","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(token, expression)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"expression:Azula::AST::Expression-instance-method","html_id":"expression:Azula::AST::Expression-instance-method","name":"expression","doc":"The `Expression` in this expression statement.","summary":"<p>The <code><a href=\"../../Azula/AST/Expression.html\">Expression</a></code> in this expression statement.</p>","abstract":false,"args":[],"args_string":" : Azula::AST::Expression","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/expression_statement.cr#L30","def":{"name":"expression","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@expression"}},{"id":"to_string:String-instance-method","html_id":"to_string:String-instance-method","name":"to_string","doc":"The literal string representation of this node.","summary":"<p>The literal string representation of this node.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/expression_statement.cr#L23","def":{"name":"to_string","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"return \"#{@expression.to_string}\""}},{"id":"token:Azula::Token-instance-method","html_id":"token:Azula::Token-instance-method","name":"token","doc":"Get the `Token` in this node.","summary":"<p>Get the <code><a href=\"../../Azula/Token.html\">Token</a></code> in this node.</p>","abstract":false,"args":[],"args_string":" : Azula::Token","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/expression_statement.cr#L28","def":{"name":"token","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@token"}},{"id":"token_literal:String-instance-method","html_id":"token_literal:String-instance-method","name":"token_literal","doc":"The literal token representation of this node.","summary":"<p>The literal token representation of this node.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/expression_statement.cr#L18","def":{"name":"token_literal","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"return @token.literal"}}],"macros":[],"types":[]},{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/FloatLiteral","path":"Azula/AST/FloatLiteral.html","kind":"class","full_name":"Azula::AST::FloatLiteral","name":"FloatLiteral","abstract":false,"superclass":{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Expression","kind":"class","full_name":"Azula::AST::Expression","name":"Expression"},"ancestors":[{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Expression","kind":"class","full_name":"Azula::AST::Expression","name":"Expression"},{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Node","kind":"class","full_name":"Azula::AST::Node","name":"Node"},{"html_id":"github.com/OisinA/AzulaCr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/OisinA/AzulaCr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"azula/ast/literal.cr","line_number":86,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/literal.cr"}],"repository_name":"github.com/OisinA/AzulaCr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/OisinA/AzulaCr/Azula/AST","kind":"module","full_name":"Azula::AST","name":"AST"},"doc":"A literal float value, eg. 10.23","summary":"<p>A literal float value, eg.</p>","class_methods":[],"constructors":[{"id":"new(token,value)-class-method","html_id":"new(token,value)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(token, value)","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/literal.cr#L91","def":{"name":"new","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(token, value)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"to_string:String-instance-method","html_id":"to_string:String-instance-method","name":"to_string","doc":"The literal string representation of this node.","summary":"<p>The literal string representation of this node.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/literal.cr#L100","def":{"name":"to_string","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"return \"#{@value}\""}},{"id":"token:Azula::Token-instance-method","html_id":"token:Azula::Token-instance-method","name":"token","doc":"Get the `Token` in this node.","summary":"<p>Get the <code><a href=\"../../Azula/Token.html\">Token</a></code> in this node.</p>","abstract":false,"args":[],"args_string":" : Azula::Token","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/literal.cr#L105","def":{"name":"token","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@token"}},{"id":"token_literal:String-instance-method","html_id":"token_literal:String-instance-method","name":"token_literal","doc":"The literal token representation of this node.","summary":"<p>The literal token representation of this node.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/literal.cr#L95","def":{"name":"token_literal","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"return @token.literal"}},{"id":"value:Float32-instance-method","html_id":"value:Float32-instance-method","name":"value","doc":"Get the native Crystal `Float32` value of this node.","summary":"<p>Get the native Crystal <code>Float32</code> value of this node.</p>","abstract":false,"args":[],"args_string":" : Float32","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/literal.cr#L107","def":{"name":"value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@value"}}],"macros":[],"types":[]},{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Function","path":"Azula/AST/Function.html","kind":"class","full_name":"Azula::AST::Function","name":"Function","abstract":false,"superclass":{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Statement","kind":"class","full_name":"Azula::AST::Statement","name":"Statement"},"ancestors":[{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Statement","kind":"class","full_name":"Azula::AST::Statement","name":"Statement"},{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Node","kind":"class","full_name":"Azula::AST::Node","name":"Node"},{"html_id":"github.com/OisinA/AzulaCr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/OisinA/AzulaCr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"azula/ast/function.cr","line_number":10,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/function.cr"}],"repository_name":"github.com/OisinA/AzulaCr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/OisinA/AzulaCr/Azula/AST","kind":"module","full_name":"Azula::AST","name":"AST"},"doc":"Function represents a callable function.","summary":"<p>Function represents a callable function.</p>","class_methods":[],"constructors":[{"id":"new(token,function_name,parameters,return_types,body)-class-method","html_id":"new(token,function_name,parameters,return_types,body)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""},{"name":"function_name","doc":null,"default_value":"","external_name":"function_name","restriction":""},{"name":"parameters","doc":null,"default_value":"","external_name":"parameters","restriction":""},{"name":"return_types","doc":null,"default_value":"","external_name":"return_types","restriction":""},{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":""}],"args_string":"(token, function_name, parameters, return_types, body)","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/function.cr#L18","def":{"name":"new","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""},{"name":"function_name","doc":null,"default_value":"","external_name":"function_name","restriction":""},{"name":"parameters","doc":null,"default_value":"","external_name":"parameters","restriction":""},{"name":"return_types","doc":null,"default_value":"","external_name":"return_types","restriction":""},{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(token, function_name, parameters, return_types, body)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"body:Azula::AST::Block-instance-method","html_id":"body:Azula::AST::Block-instance-method","name":"body","doc":"The body of the function, to be executed when the function is called.","summary":"<p>The body of the function, to be executed when the function is called.</p>","abstract":false,"args":[],"args_string":" : Azula::AST::Block","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/function.cr#L50","def":{"name":"body","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@body"}},{"id":"function_name:Azula::AST::Identifier-instance-method","html_id":"function_name:Azula::AST::Identifier-instance-method","name":"function_name","doc":"The name assigned to this function, as an `Identifier`.","summary":"<p>The name assigned to this function, as an <code><a href=\"../../Azula/AST/Identifier.html\">Identifier</a></code>.</p>","abstract":false,"args":[],"args_string":" : Azula::AST::Identifier","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/function.cr#L44","def":{"name":"function_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@function_name"}},{"id":"parameters:Array(Azula::AST::TypedIdentifier)-instance-method","html_id":"parameters:Array(Azula::AST::TypedIdentifier)-instance-method","name":"parameters","doc":"The parameters to be passed to this function, an array of `Expression`.","summary":"<p>The parameters to be passed to this function, an array of <code><a href=\"../../Azula/AST/Expression.html\">Expression</a></code>.</p>","abstract":false,"args":[],"args_string":" : Array(Azula::AST::TypedIdentifier)","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/function.cr#L46","def":{"name":"parameters","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@parameters"}},{"id":"return_types:Array(Azula::Types::Type|String)-instance-method","html_id":"return_types:Array(Azula::Types::Type|String)-instance-method","name":"return_types","doc":"The return types of this function, as an array of `TypedIdentifier`.","summary":"<p>The return types of this function, as an array of <code><a href=\"../../Azula/AST/TypedIdentifier.html\">TypedIdentifier</a></code>.</p>","abstract":false,"args":[],"args_string":" : Array(Azula::Types::Type | String)","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/function.cr#L48","def":{"name":"return_types","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@return_types"}},{"id":"to_string:String-instance-method","html_id":"to_string:String-instance-method","name":"to_string","doc":"The literal string representation of this node.","summary":"<p>The literal string representation of this node.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/function.cr#L27","def":{"name":"to_string","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"s = \"#{self.token_literal} #{@function_name.to_string}(\"\n@parameters.each do |param|\n  s = s + (param.to_string + \",\")\nend\ns = s + \") : (\"\n@return_types.each do |rt|\n  s = s + \"#{rt.to_s.downcase}, \"\nend\ns = s[0, s.size - 2]\ns = s + \") {\\n#{@body.to_string}}\"\nreturn s\n"}},{"id":"token:Azula::Token-instance-method","html_id":"token:Azula::Token-instance-method","name":"token","doc":"Get the `Token` in this node.","summary":"<p>Get the <code><a href=\"../../Azula/Token.html\">Token</a></code> in this node.</p>","abstract":false,"args":[],"args_string":" : Azula::Token","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/function.cr#L42","def":{"name":"token","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@token"}},{"id":"token_literal:String-instance-method","html_id":"token_literal:String-instance-method","name":"token_literal","doc":"The literal token representation of this node.","summary":"<p>The literal token representation of this node.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/function.cr#L22","def":{"name":"token_literal","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"return @token.literal"}}],"macros":[],"types":[]},{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/FunctionCall","path":"Azula/AST/FunctionCall.html","kind":"class","full_name":"Azula::AST::FunctionCall","name":"FunctionCall","abstract":false,"superclass":{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Expression","kind":"class","full_name":"Azula::AST::Expression","name":"Expression"},"ancestors":[{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Expression","kind":"class","full_name":"Azula::AST::Expression","name":"Expression"},{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Node","kind":"class","full_name":"Azula::AST::Node","name":"Node"},{"html_id":"github.com/OisinA/AzulaCr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/OisinA/AzulaCr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"azula/ast/function_call.cr","line_number":9,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/function_call.cr"}],"repository_name":"github.com/OisinA/AzulaCr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/OisinA/AzulaCr/Azula/AST","kind":"module","full_name":"Azula::AST","name":"AST"},"doc":"Function calls are when a defined function is referenced, passing arguments, possibly expecting a return.","summary":"<p>Function calls are when a defined function is referenced, passing arguments, possibly expecting a return.</p>","class_methods":[],"constructors":[{"id":"new(token,function_name,arguments)-class-method","html_id":"new(token,function_name,arguments)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""},{"name":"function_name","doc":null,"default_value":"","external_name":"function_name","restriction":""},{"name":"arguments","doc":null,"default_value":"","external_name":"arguments","restriction":""}],"args_string":"(token, function_name, arguments)","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/function_call.cr#L15","def":{"name":"new","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""},{"name":"function_name","doc":null,"default_value":"","external_name":"function_name","restriction":""},{"name":"arguments","doc":null,"default_value":"","external_name":"arguments","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(token, function_name, arguments)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"arguments:Array(Azula::AST::Expression)-instance-method","html_id":"arguments:Array(Azula::AST::Expression)-instance-method","name":"arguments","doc":"A list of `Expression` to be passed to the `Function`.","summary":"<p>A list of <code><a href=\"../../Azula/AST/Expression.html\">Expression</a></code> to be passed to the <code><a href=\"../../Azula/AST/Function.html\">Function</a></code>.</p>","abstract":false,"args":[],"args_string":" : Array(Azula::AST::Expression)","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/function_call.cr#L38","def":{"name":"arguments","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@arguments"}},{"id":"function_name:Azula::AST::Identifier-instance-method","html_id":"function_name:Azula::AST::Identifier-instance-method","name":"function_name","doc":"The name of the `Function` to be called.","summary":"<p>The name of the <code><a href=\"../../Azula/AST/Function.html\">Function</a></code> to be called.</p>","abstract":false,"args":[],"args_string":" : Azula::AST::Identifier","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/function_call.cr#L36","def":{"name":"function_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@function_name"}},{"id":"to_string:String-instance-method","html_id":"to_string:String-instance-method","name":"to_string","doc":"The literal string representation of this node.","summary":"<p>The literal string representation of this node.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/function_call.cr#L24","def":{"name":"to_string","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"s = \"#{function_name.to_string}(\"\n@arguments.each do |arg|\n  s = s + \"#{arg.to_string},\"\nend\ns = s + \")\"\nreturn s\n"}},{"id":"token:Azula::Token-instance-method","html_id":"token:Azula::Token-instance-method","name":"token","doc":"Get the `Token` in this node.","summary":"<p>Get the <code><a href=\"../../Azula/Token.html\">Token</a></code> in this node.</p>","abstract":false,"args":[],"args_string":" : Azula::Token","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/function_call.cr#L34","def":{"name":"token","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@token"}},{"id":"token_literal:String-instance-method","html_id":"token_literal:String-instance-method","name":"token_literal","doc":"The literal token representation of this node.","summary":"<p>The literal token representation of this node.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/function_call.cr#L19","def":{"name":"token_literal","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"return @token.literal"}}],"macros":[],"types":[]},{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Identifier","path":"Azula/AST/Identifier.html","kind":"class","full_name":"Azula::AST::Identifier","name":"Identifier","abstract":false,"superclass":{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Expression","kind":"class","full_name":"Azula::AST::Expression","name":"Expression"},"ancestors":[{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Expression","kind":"class","full_name":"Azula::AST::Expression","name":"Expression"},{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Node","kind":"class","full_name":"Azula::AST::Node","name":"Node"},{"html_id":"github.com/OisinA/AzulaCr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/OisinA/AzulaCr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"azula/ast/identifier.cr","line_number":8,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/identifier.cr"}],"repository_name":"github.com/OisinA/AzulaCr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/OisinA/AzulaCr/Azula/AST","kind":"module","full_name":"Azula::AST","name":"AST"},"doc":"Identifier is a word/phrase used as an alias to a variable or function.","summary":"<p>Identifier is a word/phrase used as an alias to a variable or function.</p>","class_methods":[],"constructors":[{"id":"new(token,ident)-class-method","html_id":"new(token,ident)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""},{"name":"ident","doc":null,"default_value":"","external_name":"ident","restriction":""}],"args_string":"(token, ident)","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/identifier.cr#L13","def":{"name":"new","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""},{"name":"ident","doc":null,"default_value":"","external_name":"ident","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(token, ident)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"ident:String-instance-method","html_id":"ident:String-instance-method","name":"ident","doc":"The identifier in string form.","summary":"<p>The identifier in string form.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/identifier.cr#L29","def":{"name":"ident","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@ident"}},{"id":"to_string:String-instance-method","html_id":"to_string:String-instance-method","name":"to_string","doc":"The literal string representation of this node.","summary":"<p>The literal string representation of this node.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/identifier.cr#L22","def":{"name":"to_string","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"return @ident"}},{"id":"token:Azula::Token-instance-method","html_id":"token:Azula::Token-instance-method","name":"token","doc":"Get the `Token` in this node.","summary":"<p>Get the <code><a href=\"../../Azula/Token.html\">Token</a></code> in this node.</p>","abstract":false,"args":[],"args_string":" : Azula::Token","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/identifier.cr#L27","def":{"name":"token","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@token"}},{"id":"token_literal:String-instance-method","html_id":"token_literal:String-instance-method","name":"token_literal","doc":"The literal token representation of this node.","summary":"<p>The literal token representation of this node.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/identifier.cr#L17","def":{"name":"token_literal","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"return @token.literal"}}],"macros":[],"types":[]},{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/If","path":"Azula/AST/If.html","kind":"class","full_name":"Azula::AST::If","name":"If","abstract":false,"superclass":{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Statement","kind":"class","full_name":"Azula::AST::Statement","name":"Statement"},"ancestors":[{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Statement","kind":"class","full_name":"Azula::AST::Statement","name":"Statement"},{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Node","kind":"class","full_name":"Azula::AST::Node","name":"Node"},{"html_id":"github.com/OisinA/AzulaCr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/OisinA/AzulaCr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"azula/ast/if.cr","line_number":8,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/if.cr"}],"repository_name":"github.com/OisinA/AzulaCr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/OisinA/AzulaCr/Azula/AST","kind":"module","full_name":"Azula::AST","name":"AST"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(token,condition,consequence,alts,alternative)-class-method","html_id":"new(token,condition,consequence,alts,alternative)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""},{"name":"condition","doc":null,"default_value":"","external_name":"condition","restriction":""},{"name":"consequence","doc":null,"default_value":"","external_name":"consequence","restriction":""},{"name":"alts","doc":null,"default_value":"","external_name":"alts","restriction":""},{"name":"alternative","doc":null,"default_value":"","external_name":"alternative","restriction":""}],"args_string":"(token, condition, consequence, alts, alternative)","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/if.cr#L16","def":{"name":"new","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""},{"name":"condition","doc":null,"default_value":"","external_name":"condition","restriction":""},{"name":"consequence","doc":null,"default_value":"","external_name":"consequence","restriction":""},{"name":"alts","doc":null,"default_value":"","external_name":"alts","restriction":""},{"name":"alternative","doc":null,"default_value":"","external_name":"alternative","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(token, condition, consequence, alts, alternative)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"alternative:Azula::AST::Block?-instance-method","html_id":"alternative:Azula::AST::Block?-instance-method","name":"alternative","doc":"The else clause, that will be evaluated if no other condition is truthy.","summary":"<p>The else clause, that will be evaluated if no other condition is truthy.</p>","abstract":false,"args":[],"args_string":" : Azula::AST::Block?","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/if.cr#L45","def":{"name":"alternative","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@alternative"}},{"id":"alts:Array(Azula::AST::If)-instance-method","html_id":"alts:Array(Azula::AST::If)-instance-method","name":"alts","doc":"The alternative elseifs that will be evaluated if the condition is false.","summary":"<p>The alternative elseifs that will be evaluated if the condition is false.</p>","abstract":false,"args":[],"args_string":" : Array(Azula::AST::If)","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/if.cr#L43","def":{"name":"alts","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@alts"}},{"id":"condition:Azula::AST::Expression-instance-method","html_id":"condition:Azula::AST::Expression-instance-method","name":"condition","doc":"The if condition that will execute the consequence if evaluated truthy.","summary":"<p>The if condition that will execute the consequence if evaluated truthy.</p>","abstract":false,"args":[],"args_string":" : Azula::AST::Expression","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/if.cr#L39","def":{"name":"condition","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@condition"}},{"id":"consequence:Azula::AST::Block-instance-method","html_id":"consequence:Azula::AST::Block-instance-method","name":"consequence","doc":"The block of statements that will be executed if the condition is truthy.","summary":"<p>The block of statements that will be executed if the condition is truthy.</p>","abstract":false,"args":[],"args_string":" : Azula::AST::Block","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/if.cr#L41","def":{"name":"consequence","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@consequence"}},{"id":"to_string:String-instance-method","html_id":"to_string:String-instance-method","name":"to_string","doc":"The literal string representation of this node.","summary":"<p>The literal string representation of this node.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/if.cr#L25","def":{"name":"to_string","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"s = \"#{self.token_literal}(#{@condition.to_string}) {\\n#{@consequence.to_string}}\"\n@alts.each do |alt|\n  s = s + alt.to_string\nend\nif !@alternative.nil?\n  s = s + \" else {\\n#{@alternative.not_nil!.to_string}}\"\nend\nreturn s\n"}},{"id":"token:Azula::Token-instance-method","html_id":"token:Azula::Token-instance-method","name":"token","doc":"Get the `Token` in this node.","summary":"<p>Get the <code><a href=\"../../Azula/Token.html\">Token</a></code> in this node.</p>","abstract":false,"args":[],"args_string":" : Azula::Token","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/if.cr#L37","def":{"name":"token","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@token"}},{"id":"token_literal:String-instance-method","html_id":"token_literal:String-instance-method","name":"token_literal","doc":"The literal token representation of this node.","summary":"<p>The literal token representation of this node.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/if.cr#L20","def":{"name":"token_literal","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"return @token.literal"}}],"macros":[],"types":[]},{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Infix","path":"Azula/AST/Infix.html","kind":"class","full_name":"Azula::AST::Infix","name":"Infix","abstract":false,"superclass":{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Expression","kind":"class","full_name":"Azula::AST::Expression","name":"Expression"},"ancestors":[{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Expression","kind":"class","full_name":"Azula::AST::Expression","name":"Expression"},{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Node","kind":"class","full_name":"Azula::AST::Node","name":"Node"},{"html_id":"github.com/OisinA/AzulaCr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/OisinA/AzulaCr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"azula/ast/infix.cr","line_number":9,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/infix.cr"}],"repository_name":"github.com/OisinA/AzulaCr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/OisinA/AzulaCr/Azula/AST","kind":"module","full_name":"Azula::AST","name":"AST"},"doc":"An infix expression is an expression that contains two other `Expression` with an operator between them.\nEg. 5 + 2","summary":"<p>An infix expression is an expression that contains two other <code><a href=\"../../Azula/AST/Expression.html\">Expression</a></code> with an operator between them.</p>","class_methods":[],"constructors":[{"id":"new(token,left,operator,right)-class-method","html_id":"new(token,left,operator,right)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""},{"name":"left","doc":null,"default_value":"","external_name":"left","restriction":""},{"name":"operator","doc":null,"default_value":"","external_name":"operator","restriction":""},{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":""}],"args_string":"(token, left, operator, right)","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/infix.cr#L16","def":{"name":"new","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""},{"name":"left","doc":null,"default_value":"","external_name":"left","restriction":""},{"name":"operator","doc":null,"default_value":"","external_name":"operator","restriction":""},{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(token, left, operator, right)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"left:Azula::AST::Expression-instance-method","html_id":"left:Azula::AST::Expression-instance-method","name":"left","doc":"The `Expression` on the left side of the infix expression.","summary":"<p>The <code><a href=\"../../Azula/AST/Expression.html\">Expression</a></code> on the left side of the infix expression.</p>","abstract":false,"args":[],"args_string":" : Azula::AST::Expression","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/infix.cr#L32","def":{"name":"left","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@left"}},{"id":"operator:String-instance-method","html_id":"operator:String-instance-method","name":"operator","doc":"The operator that will dictate the operation between the left and right.","summary":"<p>The operator that will dictate the operation between the left and right.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/infix.cr#L34","def":{"name":"operator","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@operator"}},{"id":"right:Azula::AST::Expression-instance-method","html_id":"right:Azula::AST::Expression-instance-method","name":"right","doc":"The `Expression` on the right side of the infix expression.","summary":"<p>The <code><a href=\"../../Azula/AST/Expression.html\">Expression</a></code> on the right side of the infix expression.</p>","abstract":false,"args":[],"args_string":" : Azula::AST::Expression","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/infix.cr#L36","def":{"name":"right","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@right"}},{"id":"to_string:String-instance-method","html_id":"to_string:String-instance-method","name":"to_string","doc":"The literal string representation of this node.","summary":"<p>The literal string representation of this node.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/infix.cr#L25","def":{"name":"to_string","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"return \"(#{@left.to_string} #{@operator} #{@right.to_string})\""}},{"id":"token:Azula::Token-instance-method","html_id":"token:Azula::Token-instance-method","name":"token","doc":"Get the `Token` in this node.","summary":"<p>Get the <code><a href=\"../../Azula/Token.html\">Token</a></code> in this node.</p>","abstract":false,"args":[],"args_string":" : Azula::Token","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/infix.cr#L30","def":{"name":"token","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@token"}},{"id":"token_literal:String-instance-method","html_id":"token_literal:String-instance-method","name":"token_literal","doc":"The literal token representation of this node.","summary":"<p>The literal token representation of this node.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/infix.cr#L20","def":{"name":"token_literal","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"return @token.literal"}}],"macros":[],"types":[]},{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/IntegerLiteral","path":"Azula/AST/IntegerLiteral.html","kind":"class","full_name":"Azula::AST::IntegerLiteral","name":"IntegerLiteral","abstract":false,"superclass":{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Expression","kind":"class","full_name":"Azula::AST::Expression","name":"Expression"},"ancestors":[{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Expression","kind":"class","full_name":"Azula::AST::Expression","name":"Expression"},{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Node","kind":"class","full_name":"Azula::AST::Node","name":"Node"},{"html_id":"github.com/OisinA/AzulaCr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/OisinA/AzulaCr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"azula/ast/literal.cr","line_number":8,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/literal.cr"}],"repository_name":"github.com/OisinA/AzulaCr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/OisinA/AzulaCr/Azula/AST","kind":"module","full_name":"Azula::AST","name":"AST"},"doc":"A literal integer value, eg. 4, 3, 2","summary":"<p>A literal integer value, eg.</p>","class_methods":[],"constructors":[{"id":"new(token,value)-class-method","html_id":"new(token,value)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(token, value)","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/literal.cr#L13","def":{"name":"new","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(token, value)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"to_string:String-instance-method","html_id":"to_string:String-instance-method","name":"to_string","doc":"The literal string representation of this node.","summary":"<p>The literal string representation of this node.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/literal.cr#L22","def":{"name":"to_string","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"return \"#{@value}\""}},{"id":"token:Azula::Token-instance-method","html_id":"token:Azula::Token-instance-method","name":"token","doc":"Get the `Token` in this node.","summary":"<p>Get the <code><a href=\"../../Azula/Token.html\">Token</a></code> in this node.</p>","abstract":false,"args":[],"args_string":" : Azula::Token","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/literal.cr#L27","def":{"name":"token","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@token"}},{"id":"token_literal:String-instance-method","html_id":"token_literal:String-instance-method","name":"token_literal","doc":"The literal token representation of this node.","summary":"<p>The literal token representation of this node.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/literal.cr#L17","def":{"name":"token_literal","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"return @token.literal"}},{"id":"value:Int32-instance-method","html_id":"value:Int32-instance-method","name":"value","doc":"Get the native Crystal `Int32` value of this node.","summary":"<p>Get the native Crystal <code>Int32</code> value of this node.</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/literal.cr#L29","def":{"name":"value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@value"}}],"macros":[],"types":[]},{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Macro","path":"Azula/AST/Macro.html","kind":"class","full_name":"Azula::AST::Macro","name":"Macro","abstract":false,"superclass":{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Statement","kind":"class","full_name":"Azula::AST::Statement","name":"Statement"},"ancestors":[{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Statement","kind":"class","full_name":"Azula::AST::Statement","name":"Statement"},{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Node","kind":"class","full_name":"Azula::AST::Node","name":"Node"},{"html_id":"github.com/OisinA/AzulaCr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/OisinA/AzulaCr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"azula/ast/macro.cr","line_number":10,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/macro.cr"}],"repository_name":"github.com/OisinA/AzulaCr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/OisinA/AzulaCr/Azula/AST","kind":"module","full_name":"Azula::AST","name":"AST"},"doc":"Function represents a callable function","summary":"<p>Function represents a callable function</p>","class_methods":[],"constructors":[{"id":"new(token,macro_name,parameters,body)-class-method","html_id":"new(token,macro_name,parameters,body)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""},{"name":"macro_name","doc":null,"default_value":"","external_name":"macro_name","restriction":""},{"name":"parameters","doc":null,"default_value":"","external_name":"parameters","restriction":""},{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":""}],"args_string":"(token, macro_name, parameters, body)","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/macro.cr#L17","def":{"name":"new","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""},{"name":"macro_name","doc":null,"default_value":"","external_name":"macro_name","restriction":""},{"name":"parameters","doc":null,"default_value":"","external_name":"parameters","restriction":""},{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(token, macro_name, parameters, body)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"body:Azula::AST::Block-instance-method","html_id":"body:Azula::AST::Block-instance-method","name":"body","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Azula::AST::Block","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/macro.cr#L36","def":{"name":"body","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@body"}},{"id":"macro_name:Azula::AST::Identifier-instance-method","html_id":"macro_name:Azula::AST::Identifier-instance-method","name":"macro_name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Azula::AST::Identifier","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/macro.cr#L34","def":{"name":"macro_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@macro_name"}},{"id":"parameters:Array(Azula::AST::Identifier)-instance-method","html_id":"parameters:Array(Azula::AST::Identifier)-instance-method","name":"parameters","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Azula::AST::Identifier)","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/macro.cr#L35","def":{"name":"parameters","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@parameters"}},{"id":"to_string:String-instance-method","html_id":"to_string:String-instance-method","name":"to_string","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/macro.cr#L24","def":{"name":"to_string","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"s = \"#{self.token_literal} #{@macro_name.to_string}(\"\n@parameters.each do |param|\n  s = s + (param.to_string + \",\")\nend\ns = s + \") {\\n#{@body.to_string}}\"\nreturn s\n"}},{"id":"token:Azula::Token-instance-method","html_id":"token:Azula::Token-instance-method","name":"token","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Azula::Token","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/macro.cr#L33","def":{"name":"token","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@token"}},{"id":"token_literal:String-instance-method","html_id":"token_literal:String-instance-method","name":"token_literal","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/macro.cr#L20","def":{"name":"token_literal","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"return @token.literal"}}],"macros":[],"types":[]},{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Node","path":"Azula/AST/Node.html","kind":"class","full_name":"Azula::AST::Node","name":"Node","abstract":true,"superclass":{"html_id":"github.com/OisinA/AzulaCr/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/OisinA/AzulaCr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/OisinA/AzulaCr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"azula/ast/ast.cr","line_number":5,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/ast.cr"}],"repository_name":"github.com/OisinA/AzulaCr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Expression","kind":"class","full_name":"Azula::AST::Expression","name":"Expression"},{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Statement","kind":"class","full_name":"Azula::AST::Statement","name":"Statement"}],"including_types":[],"namespace":{"html_id":"github.com/OisinA/AzulaCr/Azula/AST","kind":"module","full_name":"Azula::AST","name":"AST"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"to_string:String-instance-method","html_id":"to_string:String-instance-method","name":"to_string","doc":"The string representation of this node","summary":"<p>The string representation of this node</p>","abstract":true,"args":[],"args_string":" : String","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/ast.cr#L9","def":{"name":"to_string","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":""}},{"id":"token_literal:String-instance-method","html_id":"token_literal:String-instance-method","name":"token_literal","doc":"The literal token representation of this node","summary":"<p>The literal token representation of this node</p>","abstract":true,"args":[],"args_string":" : String","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/ast.cr#L7","def":{"name":"token_literal","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Prefix","path":"Azula/AST/Prefix.html","kind":"class","full_name":"Azula::AST::Prefix","name":"Prefix","abstract":false,"superclass":{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Expression","kind":"class","full_name":"Azula::AST::Expression","name":"Expression"},"ancestors":[{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Expression","kind":"class","full_name":"Azula::AST::Expression","name":"Expression"},{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Node","kind":"class","full_name":"Azula::AST::Node","name":"Node"},{"html_id":"github.com/OisinA/AzulaCr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/OisinA/AzulaCr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"azula/ast/prefix.cr","line_number":9,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/prefix.cr"}],"repository_name":"github.com/OisinA/AzulaCr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/OisinA/AzulaCr/Azula/AST","kind":"module","full_name":"Azula::AST","name":"AST"},"doc":"A prefix expression is when an operator is put in front of an expression.\nEg. !true, -5","summary":"<p>A prefix expression is when an operator is put in front of an expression.</p>","class_methods":[],"constructors":[{"id":"new(token,operator,right)-class-method","html_id":"new(token,operator,right)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""},{"name":"operator","doc":null,"default_value":"","external_name":"operator","restriction":""},{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":""}],"args_string":"(token, operator, right)","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/prefix.cr#L15","def":{"name":"new","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""},{"name":"operator","doc":null,"default_value":"","external_name":"operator","restriction":""},{"name":"right","doc":null,"default_value":"","external_name":"right","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(token, operator, right)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"operator:String-instance-method","html_id":"operator:String-instance-method","name":"operator","doc":"The prefix operator placed in front of expression.","summary":"<p>The prefix operator placed in front of expression.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/prefix.cr#L31","def":{"name":"operator","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@operator"}},{"id":"right:Azula::AST::Expression-instance-method","html_id":"right:Azula::AST::Expression-instance-method","name":"right","doc":"The expression to be changed by the operator.","summary":"<p>The expression to be changed by the operator.</p>","abstract":false,"args":[],"args_string":" : Azula::AST::Expression","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/prefix.cr#L33","def":{"name":"right","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@right"}},{"id":"to_string:String-instance-method","html_id":"to_string:String-instance-method","name":"to_string","doc":"The literal string representation of this node.","summary":"<p>The literal string representation of this node.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/prefix.cr#L24","def":{"name":"to_string","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"return \"(#{@operator}#{@right.to_string})\""}},{"id":"token:Azula::Token-instance-method","html_id":"token:Azula::Token-instance-method","name":"token","doc":"Get the `Token` in this node.","summary":"<p>Get the <code><a href=\"../../Azula/Token.html\">Token</a></code> in this node.</p>","abstract":false,"args":[],"args_string":" : Azula::Token","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/prefix.cr#L29","def":{"name":"token","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@token"}},{"id":"token_literal:String-instance-method","html_id":"token_literal:String-instance-method","name":"token_literal","doc":"The literal token representation of this node.","summary":"<p>The literal token representation of this node.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/prefix.cr#L19","def":{"name":"token_literal","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"return @token.literal"}}],"macros":[],"types":[]},{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Program","path":"Azula/AST/Program.html","kind":"class","full_name":"Azula::AST::Program","name":"Program","abstract":false,"superclass":{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Statement","kind":"class","full_name":"Azula::AST::Statement","name":"Statement"},"ancestors":[{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Statement","kind":"class","full_name":"Azula::AST::Statement","name":"Statement"},{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Node","kind":"class","full_name":"Azula::AST::Node","name":"Node"},{"html_id":"github.com/OisinA/AzulaCr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/OisinA/AzulaCr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"azula/ast/program.cr","line_number":6,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/program.cr"}],"repository_name":"github.com/OisinA/AzulaCr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/OisinA/AzulaCr/Azula/AST","kind":"module","full_name":"Azula::AST","name":"AST"},"doc":"Program statement contains all the statements in a program.","summary":"<p>Program statement contains all the statements in a program.</p>","class_methods":[],"constructors":[{"id":"new(statements)-class-method","html_id":"new(statements)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"statements","doc":null,"default_value":"","external_name":"statements","restriction":""}],"args_string":"(statements)","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/program.cr#L10","def":{"name":"new","args":[{"name":"statements","doc":null,"default_value":"","external_name":"statements","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(statements)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"statements:Array(Azula::AST::Statement)-instance-method","html_id":"statements:Array(Azula::AST::Statement)-instance-method","name":"statements","doc":"The statements in this Program.","summary":"<p>The statements in this Program.</p>","abstract":false,"args":[],"args_string":" : Array(Azula::AST::Statement)","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/program.cr#L28","def":{"name":"statements","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@statements"}},{"id":"to_string:String-instance-method","html_id":"to_string:String-instance-method","name":"to_string","doc":"The literal string representation of this node.","summary":"<p>The literal string representation of this node.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/program.cr#L19","def":{"name":"to_string","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"output = \"\"\n@statements.each do |statement|\n  output = output + (statement.to_string + \"\\n\")\nend\nreturn output[0..(output.size - 2)]\n"}},{"id":"token_literal:String-instance-method","html_id":"token_literal:String-instance-method","name":"token_literal","doc":"The literal token representation of this node.","summary":"<p>The literal token representation of this node.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/program.cr#L14","def":{"name":"token_literal","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"return not(@statements.empty? ? @statements[0].token_literal : \"\")"}}],"macros":[],"types":[]},{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Return","path":"Azula/AST/Return.html","kind":"class","full_name":"Azula::AST::Return","name":"Return","abstract":false,"superclass":{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Statement","kind":"class","full_name":"Azula::AST::Statement","name":"Statement"},"ancestors":[{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Statement","kind":"class","full_name":"Azula::AST::Statement","name":"Statement"},{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Node","kind":"class","full_name":"Azula::AST::Node","name":"Node"},{"html_id":"github.com/OisinA/AzulaCr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/OisinA/AzulaCr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"azula/ast/return.cr","line_number":8,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/return.cr"}],"repository_name":"github.com/OisinA/AzulaCr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/OisinA/AzulaCr/Azula/AST","kind":"module","full_name":"Azula::AST","name":"AST"},"doc":"Return statement is used to pass value(s) back from a function.","summary":"<p>Return statement is used to pass value(s) back from a function.</p>","class_methods":[],"constructors":[{"id":"new(token,values)-class-method","html_id":"new(token,values)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""},{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":""}],"args_string":"(token, values)","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/return.cr#L13","def":{"name":"new","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""},{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(token, values)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"to_string:String-instance-method","html_id":"to_string:String-instance-method","name":"to_string","doc":"The literal string representation of this node.","summary":"<p>The literal string representation of this node.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/return.cr#L22","def":{"name":"to_string","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"s = \"#{self.token_literal} \"\n@values.each do |val|\n  s = s + \"#{val.to_string}, \"\nend\nif @values.size > 0\n  s = s[0, s.size - 2]\nend\nreturn s\n"}},{"id":"token:Azula::Token-instance-method","html_id":"token:Azula::Token-instance-method","name":"token","doc":"Get the `Token` in this node.","summary":"<p>Get the <code><a href=\"../../Azula/Token.html\">Token</a></code> in this node.</p>","abstract":false,"args":[],"args_string":" : Azula::Token","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/return.cr#L34","def":{"name":"token","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@token"}},{"id":"token_literal:String-instance-method","html_id":"token_literal:String-instance-method","name":"token_literal","doc":"The literal token representation of this node.","summary":"<p>The literal token representation of this node.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/return.cr#L17","def":{"name":"token_literal","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"return @token.literal"}},{"id":"values:Array(Azula::AST::Expression)-instance-method","html_id":"values:Array(Azula::AST::Expression)-instance-method","name":"values","doc":"The array of values to be returned.","summary":"<p>The array of values to be returned.</p>","abstract":false,"args":[],"args_string":" : Array(Azula::AST::Expression)","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/return.cr#L36","def":{"name":"values","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@values"}}],"macros":[],"types":[]},{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Statement","path":"Azula/AST/Statement.html","kind":"class","full_name":"Azula::AST::Statement","name":"Statement","abstract":true,"superclass":{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Node","kind":"class","full_name":"Azula::AST::Node","name":"Node"},"ancestors":[{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Node","kind":"class","full_name":"Azula::AST::Node","name":"Node"},{"html_id":"github.com/OisinA/AzulaCr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/OisinA/AzulaCr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"azula/ast/ast.cr","line_number":12,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/ast.cr"}],"repository_name":"github.com/OisinA/AzulaCr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Assign","kind":"class","full_name":"Azula::AST::Assign","name":"Assign"},{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Block","kind":"class","full_name":"Azula::AST::Block","name":"Block"},{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/ExpressionStatement","kind":"class","full_name":"Azula::AST::ExpressionStatement","name":"ExpressionStatement"},{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Function","kind":"class","full_name":"Azula::AST::Function","name":"Function"},{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/If","kind":"class","full_name":"Azula::AST::If","name":"If"},{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Macro","kind":"class","full_name":"Azula::AST::Macro","name":"Macro"},{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Program","kind":"class","full_name":"Azula::AST::Program","name":"Program"},{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Return","kind":"class","full_name":"Azula::AST::Return","name":"Return"},{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Struct","kind":"class","full_name":"Azula::AST::Struct","name":"Struct"},{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/TypedIdentifier","kind":"class","full_name":"Azula::AST::TypedIdentifier","name":"TypedIdentifier"},{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/While","kind":"class","full_name":"Azula::AST::While","name":"While"}],"including_types":[],"namespace":{"html_id":"github.com/OisinA/AzulaCr/Azula/AST","kind":"module","full_name":"Azula::AST","name":"AST"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/StringLiteral","path":"Azula/AST/StringLiteral.html","kind":"class","full_name":"Azula::AST::StringLiteral","name":"StringLiteral","abstract":false,"superclass":{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Expression","kind":"class","full_name":"Azula::AST::Expression","name":"Expression"},"ancestors":[{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Expression","kind":"class","full_name":"Azula::AST::Expression","name":"Expression"},{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Node","kind":"class","full_name":"Azula::AST::Node","name":"Node"},{"html_id":"github.com/OisinA/AzulaCr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/OisinA/AzulaCr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"azula/ast/literal.cr","line_number":34,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/literal.cr"}],"repository_name":"github.com/OisinA/AzulaCr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/OisinA/AzulaCr/Azula/AST","kind":"module","full_name":"Azula::AST","name":"AST"},"doc":"A literal string value, eg. \"hello world\"","summary":"<p>A literal string value, eg.</p>","class_methods":[],"constructors":[{"id":"new(token,value)-class-method","html_id":"new(token,value)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(token, value)","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/literal.cr#L39","def":{"name":"new","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(token, value)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"to_string:String-instance-method","html_id":"to_string:String-instance-method","name":"to_string","doc":"The literal string representation of this node.","summary":"<p>The literal string representation of this node.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/literal.cr#L48","def":{"name":"to_string","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"return \"\\\"#{@value}\\\"\""}},{"id":"token:Azula::Token-instance-method","html_id":"token:Azula::Token-instance-method","name":"token","doc":"Get the `Token` in this node.","summary":"<p>Get the <code><a href=\"../../Azula/Token.html\">Token</a></code> in this node.</p>","abstract":false,"args":[],"args_string":" : Azula::Token","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/literal.cr#L53","def":{"name":"token","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@token"}},{"id":"token_literal:String-instance-method","html_id":"token_literal:String-instance-method","name":"token_literal","doc":"The literal token representation of this node.","summary":"<p>The literal token representation of this node.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/literal.cr#L43","def":{"name":"token_literal","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"return @token.literal"}},{"id":"value:String-instance-method","html_id":"value:String-instance-method","name":"value","doc":"Get the native Crystal `String` value of this node.","summary":"<p>Get the native Crystal <code>String</code> value of this node.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/literal.cr#L55","def":{"name":"value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@value"}}],"macros":[],"types":[]},{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Struct","path":"Azula/AST/Struct.html","kind":"class","full_name":"Azula::AST::Struct","name":"Struct","abstract":false,"superclass":{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Statement","kind":"class","full_name":"Azula::AST::Statement","name":"Statement"},"ancestors":[{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Statement","kind":"class","full_name":"Azula::AST::Statement","name":"Statement"},{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Node","kind":"class","full_name":"Azula::AST::Node","name":"Node"},{"html_id":"github.com/OisinA/AzulaCr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/OisinA/AzulaCr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"azula/ast/struct.cr","line_number":9,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/struct.cr"}],"repository_name":"github.com/OisinA/AzulaCr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/OisinA/AzulaCr/Azula/AST","kind":"module","full_name":"Azula::AST","name":"AST"},"doc":"Struct allows for custom datatypes that contain other datatypes.","summary":"<p>Struct allows for custom datatypes that contain other datatypes.</p>","class_methods":[],"constructors":[{"id":"new(token,struct_name,fields)-class-method","html_id":"new(token,struct_name,fields)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""},{"name":"struct_name","doc":null,"default_value":"","external_name":"struct_name","restriction":""},{"name":"fields","doc":null,"default_value":"","external_name":"fields","restriction":""}],"args_string":"(token, struct_name, fields)","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/struct.cr#L15","def":{"name":"new","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""},{"name":"struct_name","doc":null,"default_value":"","external_name":"struct_name","restriction":""},{"name":"fields","doc":null,"default_value":"","external_name":"fields","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(token, struct_name, fields)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"fields:Array(Azula::AST::TypedIdentifier)-instance-method","html_id":"fields:Array(Azula::AST::TypedIdentifier)-instance-method","name":"fields","doc":"The fields that this struct contains.","summary":"<p>The fields that this struct contains.</p>","abstract":false,"args":[],"args_string":" : Array(Azula::AST::TypedIdentifier)","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/struct.cr#L37","def":{"name":"fields","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@fields"}},{"id":"struct_name:Azula::AST::Identifier-instance-method","html_id":"struct_name:Azula::AST::Identifier-instance-method","name":"struct_name","doc":"The `Identifier` used to reference this struct.","summary":"<p>The <code><a href=\"../../Azula/AST/Identifier.html\">Identifier</a></code> used to reference this struct.</p>","abstract":false,"args":[],"args_string":" : Azula::AST::Identifier","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/struct.cr#L35","def":{"name":"struct_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@struct_name"}},{"id":"to_string:String-instance-method","html_id":"to_string:String-instance-method","name":"to_string","doc":"The literal string representation of this node.","summary":"<p>The literal string representation of this node.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/struct.cr#L24","def":{"name":"to_string","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"s = \"#{self.token_literal} #{@struct_name.to_string} {\\n\"\n@fields.each do |field|\n  s = s + (field.to_string + \", \")\nend\ns = s + \"\\n}\"\n"}},{"id":"token:Azula::Token-instance-method","html_id":"token:Azula::Token-instance-method","name":"token","doc":"Get the `Token` in this node.","summary":"<p>Get the <code><a href=\"../../Azula/Token.html\">Token</a></code> in this node.</p>","abstract":false,"args":[],"args_string":" : Azula::Token","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/struct.cr#L33","def":{"name":"token","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@token"}},{"id":"token_literal:String-instance-method","html_id":"token_literal:String-instance-method","name":"token_literal","doc":"The literal token representation of this node.","summary":"<p>The literal token representation of this node.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/struct.cr#L19","def":{"name":"token_literal","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"return @token.literal"}}],"macros":[],"types":[]},{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/StructAccess","path":"Azula/AST/StructAccess.html","kind":"class","full_name":"Azula::AST::StructAccess","name":"StructAccess","abstract":false,"superclass":{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Expression","kind":"class","full_name":"Azula::AST::Expression","name":"Expression"},"ancestors":[{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Expression","kind":"class","full_name":"Azula::AST::Expression","name":"Expression"},{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Node","kind":"class","full_name":"Azula::AST::Node","name":"Node"},{"html_id":"github.com/OisinA/AzulaCr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/OisinA/AzulaCr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"azula/ast/struct_access.cr","line_number":8,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/struct_access.cr"}],"repository_name":"github.com/OisinA/AzulaCr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/OisinA/AzulaCr/Azula/AST","kind":"module","full_name":"Azula::AST","name":"AST"},"doc":"Struct access expression is used to get a value from a struct instance.","summary":"<p>Struct access expression is used to get a value from a struct instance.</p>","class_methods":[],"constructors":[{"id":"new(token,struct_exp,field)-class-method","html_id":"new(token,struct_exp,field)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""},{"name":"struct_exp","doc":null,"default_value":"","external_name":"struct_exp","restriction":""},{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":""}],"args_string":"(token, struct_exp, field)","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/struct_access.cr#L14","def":{"name":"new","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""},{"name":"struct_exp","doc":null,"default_value":"","external_name":"struct_exp","restriction":""},{"name":"field","doc":null,"default_value":"","external_name":"field","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(token, struct_exp, field)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"field:Azula::AST::Expression-instance-method","html_id":"field:Azula::AST::Expression-instance-method","name":"field","doc":"The field to be accessed inside the `Struct`.","summary":"<p>The field to be accessed inside the <code><a href=\"../../Azula/AST/Struct.html\">Struct</a></code>.</p>","abstract":false,"args":[],"args_string":" : Azula::AST::Expression","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/struct_access.cr#L32","def":{"name":"field","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@field"}},{"id":"struct_exp:Azula::AST::Expression-instance-method","html_id":"struct_exp:Azula::AST::Expression-instance-method","name":"struct_exp","doc":"The `Struct` that the field will be accessed in.","summary":"<p>The <code><a href=\"../../Azula/AST/Struct.html\">Struct</a></code> that the field will be accessed in.</p>","abstract":false,"args":[],"args_string":" : Azula::AST::Expression","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/struct_access.cr#L30","def":{"name":"struct_exp","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@struct_exp"}},{"id":"to_string:String-instance-method","html_id":"to_string:String-instance-method","name":"to_string","doc":"The literal string representation of this node.","summary":"<p>The literal string representation of this node.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/struct_access.cr#L23","def":{"name":"to_string","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"return \"(#{struct_exp.to_string}.#{field.to_string})\""}},{"id":"token:Azula::Token-instance-method","html_id":"token:Azula::Token-instance-method","name":"token","doc":"Get the `Token` in this node.","summary":"<p>Get the <code><a href=\"../../Azula/Token.html\">Token</a></code> in this node.</p>","abstract":false,"args":[],"args_string":" : Azula::Token","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/struct_access.cr#L28","def":{"name":"token","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@token"}},{"id":"token_literal:String-instance-method","html_id":"token_literal:String-instance-method","name":"token_literal","doc":"The literal token representation of this node.","summary":"<p>The literal token representation of this node.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/struct_access.cr#L18","def":{"name":"token_literal","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"return @token.literal"}}],"macros":[],"types":[]},{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/StructInitialise","path":"Azula/AST/StructInitialise.html","kind":"class","full_name":"Azula::AST::StructInitialise","name":"StructInitialise","abstract":false,"superclass":{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Expression","kind":"class","full_name":"Azula::AST::Expression","name":"Expression"},"ancestors":[{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Expression","kind":"class","full_name":"Azula::AST::Expression","name":"Expression"},{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Node","kind":"class","full_name":"Azula::AST::Node","name":"Node"},{"html_id":"github.com/OisinA/AzulaCr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/OisinA/AzulaCr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"azula/ast/struct.cr","line_number":42,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/struct.cr"}],"repository_name":"github.com/OisinA/AzulaCr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/OisinA/AzulaCr/Azula/AST","kind":"module","full_name":"Azula::AST","name":"AST"},"doc":"Struct initialisation, passing a an array of values for the struct to be initialised with.","summary":"<p>Struct initialisation, passing a an array of values for the struct to be initialised with.</p>","class_methods":[],"constructors":[{"id":"new(token,struct_name,values)-class-method","html_id":"new(token,struct_name,values)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""},{"name":"struct_name","doc":null,"default_value":"","external_name":"struct_name","restriction":""},{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":""}],"args_string":"(token, struct_name, values)","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/struct.cr#L48","def":{"name":"new","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""},{"name":"struct_name","doc":null,"default_value":"","external_name":"struct_name","restriction":""},{"name":"values","doc":null,"default_value":"","external_name":"values","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(token, struct_name, values)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"struct_name:Azula::AST::Identifier-instance-method","html_id":"struct_name:Azula::AST::Identifier-instance-method","name":"struct_name","doc":"The `Identifier` used to reference the struct.","summary":"<p>The <code><a href=\"../../Azula/AST/Identifier.html\">Identifier</a></code> used to reference the struct.</p>","abstract":false,"args":[],"args_string":" : Azula::AST::Identifier","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/struct.cr#L70","def":{"name":"struct_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@struct_name"}},{"id":"to_string:String-instance-method","html_id":"to_string:String-instance-method","name":"to_string","doc":"The literal string representation of this node.","summary":"<p>The literal string representation of this node.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/struct.cr#L57","def":{"name":"to_string","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"s = \"#{@struct_name.to_string} {\\n\"\n@values.each do |val|\n  s = s + \"#{val.to_string}, \"\nend\ns = s[0, s.size - 2]\ns = s + \"\\n}\"\nreturn s\n"}},{"id":"token:Azula::Token-instance-method","html_id":"token:Azula::Token-instance-method","name":"token","doc":"Get the `Token` in this node.","summary":"<p>Get the <code><a href=\"../../Azula/Token.html\">Token</a></code> in this node.</p>","abstract":false,"args":[],"args_string":" : Azula::Token","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/struct.cr#L68","def":{"name":"token","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@token"}},{"id":"token_literal:String-instance-method","html_id":"token_literal:String-instance-method","name":"token_literal","doc":"The literal token representation of this node.","summary":"<p>The literal token representation of this node.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/struct.cr#L52","def":{"name":"token_literal","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"return @token.literal"}},{"id":"values:Array(Azula::AST::Expression)-instance-method","html_id":"values:Array(Azula::AST::Expression)-instance-method","name":"values","doc":"The array of values for the struct to be initialised with.","summary":"<p>The array of values for the struct to be initialised with.</p>","abstract":false,"args":[],"args_string":" : Array(Azula::AST::Expression)","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/struct.cr#L72","def":{"name":"values","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@values"}}],"macros":[],"types":[]},{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/TypedIdentifier","path":"Azula/AST/TypedIdentifier.html","kind":"class","full_name":"Azula::AST::TypedIdentifier","name":"TypedIdentifier","abstract":false,"superclass":{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Statement","kind":"class","full_name":"Azula::AST::Statement","name":"Statement"},"ancestors":[{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Statement","kind":"class","full_name":"Azula::AST::Statement","name":"Statement"},{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Node","kind":"class","full_name":"Azula::AST::Node","name":"Node"},{"html_id":"github.com/OisinA/AzulaCr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/OisinA/AzulaCr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"azula/ast/identifier.cr","line_number":34,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/identifier.cr"}],"repository_name":"github.com/OisinA/AzulaCr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/OisinA/AzulaCr/Azula/AST","kind":"module","full_name":"Azula::AST","name":"AST"},"doc":"TypedIdentifier a word/phrase, paired with a `Type`, used to identify a variable.","summary":"<p>TypedIdentifier a word/phrase, paired with a <code>Type</code>, used to identify a variable.</p>","class_methods":[],"constructors":[{"id":"new(token,ident,type)-class-method","html_id":"new(token,ident,type)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""},{"name":"ident","doc":null,"default_value":"","external_name":"ident","restriction":""},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""}],"args_string":"(token, ident, type)","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/identifier.cr#L40","def":{"name":"new","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""},{"name":"ident","doc":null,"default_value":"","external_name":"ident","restriction":""},{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(token, ident, type)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"ident:String-instance-method","html_id":"ident:String-instance-method","name":"ident","doc":"The identifier in string form.","summary":"<p>The identifier in string form.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/identifier.cr#L56","def":{"name":"ident","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@ident"}},{"id":"to_string:String-instance-method","html_id":"to_string:String-instance-method","name":"to_string","doc":"The literal string representation of this node.","summary":"<p>The literal string representation of this node.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/identifier.cr#L49","def":{"name":"to_string","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"return \"#{@type.to_s.downcase} #{@ident}\""}},{"id":"token:Azula::Token-instance-method","html_id":"token:Azula::Token-instance-method","name":"token","doc":"The literal string representation of this node.","summary":"<p>The literal string representation of this node.</p>","abstract":false,"args":[],"args_string":" : Azula::Token","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/identifier.cr#L54","def":{"name":"token","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@token"}},{"id":"token_literal:String-instance-method","html_id":"token_literal:String-instance-method","name":"token_literal","doc":"The literal token representation of this node.","summary":"<p>The literal token representation of this node.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/identifier.cr#L44","def":{"name":"token_literal","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"return @token.literal"}},{"id":"type:Azula::Types::Type|String-instance-method","html_id":"type:Azula::Types::Type|String-instance-method","name":"type","doc":"The type of this identifier.","summary":"<p>The type of this identifier.</p>","abstract":false,"args":[],"args_string":" : Azula::Types::Type | String","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/identifier.cr#L58","def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@type"}}],"macros":[],"types":[]},{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/While","path":"Azula/AST/While.html","kind":"class","full_name":"Azula::AST::While","name":"While","abstract":false,"superclass":{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Statement","kind":"class","full_name":"Azula::AST::Statement","name":"Statement"},"ancestors":[{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Statement","kind":"class","full_name":"Azula::AST::Statement","name":"Statement"},{"html_id":"github.com/OisinA/AzulaCr/Azula/AST/Node","kind":"class","full_name":"Azula::AST::Node","name":"Node"},{"html_id":"github.com/OisinA/AzulaCr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/OisinA/AzulaCr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"azula/ast/while.cr","line_number":9,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/while.cr"}],"repository_name":"github.com/OisinA/AzulaCr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/OisinA/AzulaCr/Azula/AST","kind":"module","full_name":"Azula::AST","name":"AST"},"doc":"While loop repeats until iterator evaluates to false.","summary":"<p>While loop repeats until iterator evaluates to false.</p>","class_methods":[],"constructors":[{"id":"new(token,iterator,body)-class-method","html_id":"new(token,iterator,body)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""},{"name":"iterator","doc":null,"default_value":"","external_name":"iterator","restriction":""},{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":""}],"args_string":"(token, iterator, body)","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/while.cr#L15","def":{"name":"new","args":[{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":""},{"name":"iterator","doc":null,"default_value":"","external_name":"iterator","restriction":""},{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(token, iterator, body)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"body:Azula::AST::Block-instance-method","html_id":"body:Azula::AST::Block-instance-method","name":"body","doc":"The `Block` that will be run continuously until the iterator evaluates to false.","summary":"<p>The <code><a href=\"../../Azula/AST/Block.html\">Block</a></code> that will be run continuously until the iterator evaluates to false.</p>","abstract":false,"args":[],"args_string":" : Azula::AST::Block","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/while.cr#L33","def":{"name":"body","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@body"}},{"id":"iterator:Azula::AST::Expression-instance-method","html_id":"iterator:Azula::AST::Expression-instance-method","name":"iterator","doc":"The condition for this while loop. While loop will keep running until this evaluates to false.","summary":"<p>The condition for this while loop.</p>","abstract":false,"args":[],"args_string":" : Azula::AST::Expression","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/while.cr#L31","def":{"name":"iterator","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@iterator"}},{"id":"to_string:String-instance-method","html_id":"to_string:String-instance-method","name":"to_string","doc":"The literal string representation of this node.","summary":"<p>The literal string representation of this node.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/while.cr#L24","def":{"name":"to_string","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"return \"#{self.token_literal}(#{@iterator.to_string}) {\\n#{@body.to_string}}\""}},{"id":"token:Azula::Token-instance-method","html_id":"token:Azula::Token-instance-method","name":"token","doc":"Get the `Token` in this node.","summary":"<p>Get the <code><a href=\"../../Azula/Token.html\">Token</a></code> in this node.</p>","abstract":false,"args":[],"args_string":" : Azula::Token","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/while.cr#L29","def":{"name":"token","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@token"}},{"id":"token_literal:String-instance-method","html_id":"token_literal:String-instance-method","name":"token_literal","doc":"The literal token representation of this node.","summary":"<p>The literal token representation of this node.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/ast/while.cr#L19","def":{"name":"token_literal","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"return @token.literal"}}],"macros":[],"types":[]}]},{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler","path":"Azula/Compiler.html","kind":"module","full_name":"Azula::Compiler","name":"Compiler","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"azula/compiler/visitors/visitor.cr","line_number":6,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/visitor.cr"},{"filename":"azula/compiler/visitors/assign.cr","line_number":6,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/assign.cr"},{"filename":"azula/compiler/visitors/block.cr","line_number":6,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/block.cr"},{"filename":"azula/compiler/visitors/expression_statement.cr","line_number":6,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/expression_statement.cr"},{"filename":"azula/compiler/visitors/function.cr","line_number":7,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/function.cr"},{"filename":"azula/compiler/visitors/function_call.cr","line_number":7,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/function_call.cr"},{"filename":"azula/compiler/visitors/identifier.cr","line_number":6,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/identifier.cr"},{"filename":"azula/compiler/visitors/if.cr","line_number":6,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/if.cr"},{"filename":"azula/compiler/visitors/infix.cr","line_number":6,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/infix.cr"},{"filename":"azula/compiler/visitors/literals.cr","line_number":7,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/literals.cr"},{"filename":"azula/compiler/visitors/program.cr","line_number":6,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/program.cr"},{"filename":"azula/compiler/visitors/return.cr","line_number":6,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/return.cr"},{"filename":"azula/compiler/visitors/struct.cr","line_number":7,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/struct.cr"},{"filename":"azula/compiler/visitors/while.cr","line_number":7,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/while.cr"},{"filename":"azula/compiler/compiler.cr","line_number":7,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/compiler.cr"}],"repository_name":"github.com/OisinA/AzulaCr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/OisinA/AzulaCr/Azula","kind":"module","full_name":"Azula","name":"Azula"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Compiler","path":"Azula/Compiler/Compiler.html","kind":"class","full_name":"Azula::Compiler::Compiler","name":"Compiler","abstract":false,"superclass":{"html_id":"github.com/OisinA/AzulaCr/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/OisinA/AzulaCr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/OisinA/AzulaCr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"azula/compiler/compiler.cr","line_number":9,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/compiler.cr"}],"repository_name":"github.com/OisinA/AzulaCr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler","kind":"module","full_name":"Azula::Compiler","name":"Compiler"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/compiler.cr#L43","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"add_builtin_func(name:String,func:LLVM::Function)-instance-method","html_id":"add_builtin_func(name:String,func:LLVM::Function)-instance-method","name":"add_builtin_func","doc":"Register builtin function","summary":"<p>Register builtin function</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"func","doc":null,"default_value":"","external_name":"func","restriction":"LLVM::Function"}],"args_string":"(name : String, func : LLVM::Function)","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/compiler.cr#L76","def":{"name":"add_builtin_func","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"func","doc":null,"default_value":"","external_name":"func","restriction":"LLVM::Function"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@builtin_funcs[name] = func"}},{"id":"add_builtins-instance-method","html_id":"add_builtins-instance-method","name":"add_builtins","doc":"Add the builtin functions","summary":"<p>Add the builtin functions</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/compiler.cr#L61","def":{"name":"add_builtins","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"builtin_printfunc = @main_module.functions.add(\"printf\", [@context.void_pointer], @context.int32, true)\nprint_func = @main_module.functions.add(\"print\", [@string_type.pointer], @context.void, true) do |func|\n  entry = func.basic_blocks.append(\"entry\") do |builder|\n    v = builder.gep(func.params[0], @context.int32.const_int(0), @context.int32.const_int(0))\n    val = builder.load(v)\n    builder.call(builtin_printfunc, val)\n    builder.ret\n  end\nend\nadd_builtin_func(\"__printf\", builtin_printfunc)\nadd_builtin_func(\"print\", print_func)\n"}},{"id":"builder:LLVM::Builder-instance-method","html_id":"builder:LLVM::Builder-instance-method","name":"builder","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : LLVM::Builder","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/compiler.cr#L29","def":{"name":"builder","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@builder"}},{"id":"builder=(builder)-instance-method","html_id":"builder=(builder)-instance-method","name":"builder=","doc":null,"summary":null,"abstract":false,"args":[{"name":"builder","doc":null,"default_value":"","external_name":"builder","restriction":""}],"args_string":"(builder)","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/compiler.cr#L39","def":{"name":"builder=","args":[{"name":"builder","doc":null,"default_value":"","external_name":"builder","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@builder = builder"}},{"id":"compile(node:AST::Node):LLVM::Value?-instance-method","html_id":"compile(node:AST::Node):LLVM::Value?-instance-method","name":"compile","doc":"Take each node, use its visitor to generate the LLVM code for it.","summary":"<p>Take each node, use its visitor to generate the LLVM code for it.</p>","abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Node"}],"args_string":"(node : AST::Node) : LLVM::Value?","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/compiler.cr#L90","def":{"name":"compile","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"LLVM::Value | ::Nil","visibility":"Public","body":"visitor = @visitors.fetch(node.class, nil)\nif visitor.nil?\n  puts(node)\n  puts(\"unknown node\")\n  return\nend\nreturn visitor.run(self, node)\n"}},{"id":"context:LLVM::Context-instance-method","html_id":"context:LLVM::Context-instance-method","name":"context","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : LLVM::Context","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/compiler.cr#L27","def":{"name":"context","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@context"}},{"id":"create_executable(file:String)-instance-method","html_id":"create_executable(file:String)-instance-method","name":"create_executable","doc":"Create an executable file using clang.","summary":"<p>Create an executable file using clang.</p>","abstract":false,"args":[{"name":"file","doc":null,"default_value":"","external_name":"file","restriction":"String"}],"args_string":"(file : String)","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/compiler.cr#L106","def":{"name":"create_executable","args":[{"name":"file","doc":null,"default_value":"","external_name":"file","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"LLVM.init_x86\ntarget = LLVM::Target.from_triple(LLVM.default_target_triple)\nmachine = target.create_target_machine(LLVM.default_target_triple)\nmachine.emit_obj_to_file(@main_module, \"#{file}.o\")\nsystem(\"clang -o #{file} -lstdc++ #{file}.o\")\nFile.delete(\"#{file}.o\")\n"}},{"id":"current_func:LLVM::Function?-instance-method","html_id":"current_func:LLVM::Function?-instance-method","name":"current_func","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : LLVM::Function?","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/compiler.cr#L30","def":{"name":"current_func","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@current_func"}},{"id":"current_func=(current_func)-instance-method","html_id":"current_func=(current_func)-instance-method","name":"current_func=","doc":null,"summary":null,"abstract":false,"args":[{"name":"current_func","doc":null,"default_value":"","external_name":"current_func","restriction":""}],"args_string":"(current_func)","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/compiler.cr#L40","def":{"name":"current_func=","args":[{"name":"current_func","doc":null,"default_value":"","external_name":"current_func","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@current_func = current_func"}},{"id":"has_return:Bool-instance-method","html_id":"has_return:Bool-instance-method","name":"has_return","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/compiler.cr#L32","def":{"name":"has_return","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@has_return"}},{"id":"has_return=(has_return)-instance-method","html_id":"has_return=(has_return)-instance-method","name":"has_return=","doc":null,"summary":null,"abstract":false,"args":[{"name":"has_return","doc":null,"default_value":"","external_name":"has_return","restriction":""}],"args_string":"(has_return)","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/compiler.cr#L41","def":{"name":"has_return=","args":[{"name":"has_return","doc":null,"default_value":"","external_name":"has_return","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@has_return = has_return"}},{"id":"main_module:LLVM::Module-instance-method","html_id":"main_module:LLVM::Module-instance-method","name":"main_module","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : LLVM::Module","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/compiler.cr#L28","def":{"name":"main_module","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@main_module"}},{"id":"register_visitors-instance-method","html_id":"register_visitors-instance-method","name":"register_visitors","doc":"Macro that registers each subclass of Visitor against the Node it is meant to visit","summary":"<p>Macro that registers each subclass of Visitor against the Node it is meant to visit</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/compiler.cr#L83","def":{"name":"register_visitors","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{% for visitor in Visitors::Visitor.all_subclasses %}\n                    @visitors[{{ (visitor.annotation(Visitors::CompilerVisitor))[:node] }}] = {{ visitor }}.new\n                {% end %}"}},{"id":"string_type:LLVM::Type-instance-method","html_id":"string_type:LLVM::Type-instance-method","name":"string_type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : LLVM::Type","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/compiler.cr#L34","def":{"name":"string_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@string_type"}},{"id":"struct_fields:Hash(String,Hash(String,Int32))-instance-method","html_id":"struct_fields:Hash(String,Hash(String,Int32))-instance-method","name":"struct_fields","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Hash(String, Hash(String, Int32))","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/compiler.cr#L37","def":{"name":"struct_fields","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@struct_fields"}},{"id":"structs:Hash(String,LLVM::Type)-instance-method","html_id":"structs:Hash(String,LLVM::Type)-instance-method","name":"structs","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Hash(String, LLVM::Type)","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/compiler.cr#L36","def":{"name":"structs","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@structs"}},{"id":"types:Hash(Azula::Types::Type,LLVM::Type)-instance-method","html_id":"types:Hash(Azula::Types::Type,LLVM::Type)-instance-method","name":"types","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Hash(Azula::Types::Type, LLVM::Type)","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/compiler.cr#L33","def":{"name":"types","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@types"}},{"id":"vars:Hash(String,LLVM::Value)-instance-method","html_id":"vars:Hash(String,LLVM::Value)-instance-method","name":"vars","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Hash(String, LLVM::Value)","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/compiler.cr#L31","def":{"name":"vars","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@vars"}},{"id":"write_to_file(file:String)-instance-method","html_id":"write_to_file(file:String)-instance-method","name":"write_to_file","doc":"Write the LLIR to a file.","summary":"<p>Write the LLIR to a file.</p>","abstract":false,"args":[{"name":"file","doc":null,"default_value":"","external_name":"file","restriction":"String"}],"args_string":"(file : String)","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/compiler.cr#L101","def":{"name":"write_to_file","args":[{"name":"file","doc":null,"default_value":"","external_name":"file","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@main_module.print_to_file(file)"}}],"macros":[],"types":[]},{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors","path":"Azula/Compiler/Visitors.html","kind":"module","full_name":"Azula::Compiler::Visitors","name":"Visitors","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"azula/compiler/visitors/visitor.cr","line_number":7,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/visitor.cr"},{"filename":"azula/compiler/visitors/assign.cr","line_number":7,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/assign.cr"},{"filename":"azula/compiler/visitors/block.cr","line_number":7,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/block.cr"},{"filename":"azula/compiler/visitors/expression_statement.cr","line_number":7,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/expression_statement.cr"},{"filename":"azula/compiler/visitors/function.cr","line_number":8,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/function.cr"},{"filename":"azula/compiler/visitors/function_call.cr","line_number":8,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/function_call.cr"},{"filename":"azula/compiler/visitors/identifier.cr","line_number":7,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/identifier.cr"},{"filename":"azula/compiler/visitors/if.cr","line_number":7,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/if.cr"},{"filename":"azula/compiler/visitors/infix.cr","line_number":7,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/infix.cr"},{"filename":"azula/compiler/visitors/literals.cr","line_number":8,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/literals.cr"},{"filename":"azula/compiler/visitors/program.cr","line_number":7,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/program.cr"},{"filename":"azula/compiler/visitors/return.cr","line_number":7,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/return.cr"},{"filename":"azula/compiler/visitors/struct.cr","line_number":8,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/struct.cr"},{"filename":"azula/compiler/visitors/while.cr","line_number":8,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/while.cr"}],"repository_name":"github.com/OisinA/AzulaCr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler","kind":"module","full_name":"Azula::Compiler","name":"Compiler"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors/Assign","path":"Azula/Compiler/Visitors/Assign.html","kind":"class","full_name":"Azula::Compiler::Visitors::Assign","name":"Assign","abstract":false,"superclass":{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors/Visitor","kind":"class","full_name":"Azula::Compiler::Visitors::Visitor","name":"Visitor"},"ancestors":[{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors/Visitor","kind":"class","full_name":"Azula::Compiler::Visitors::Visitor","name":"Visitor"},{"html_id":"github.com/OisinA/AzulaCr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/OisinA/AzulaCr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"azula/compiler/visitors/assign.cr","line_number":11,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/assign.cr"}],"repository_name":"github.com/OisinA/AzulaCr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors","kind":"module","full_name":"Azula::Compiler::Visitors","name":"Visitors"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"run(compiler:Compiler,node:AST::Node)-instance-method","html_id":"run(compiler:Compiler,node:AST::Node)-instance-method","name":"run","doc":null,"summary":null,"abstract":false,"args":[{"name":"compiler","doc":null,"default_value":"","external_name":"compiler","restriction":"Compiler"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Node"}],"args_string":"(compiler : Compiler, node : AST::Node)","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/assign.cr#L13","def":{"name":"run","args":[{"name":"compiler","doc":null,"default_value":"","external_name":"compiler","restriction":"Compiler"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"node = node.as?(AST::Assign)\nif node.nil?\n  return\nend\nident = node.idents[0].as?(AST::TypedIdentifier)\nif ident.nil?\n  ident = node.idents[0].as(AST::Identifier)\n  alloca = compiler.vars.fetch(ident.ident, nil)\n  if alloca.nil?\n    return\n  end\n  val = compiler.compile(node.values[0])\n  if val.nil?\n    return\n  end\n  compiler.builder.store(val.not_nil!.to_unsafe, alloca)\n  return\nend\nassign_type = compiler.types.fetch(ident.type, nil)\nif assign_type.nil?\n  assign_type = compiler.structs.fetch(ident.type, nil)\n  if assign_type.nil?\n    return\n  end\nend\nval = compiler.compile(node.values[0])\nptr = compiler.builder.alloca(assign_type, ident.ident)\ncompiler.vars[ident.ident] = ptr\ncompiler.builder.store(val.not_nil!.to_unsafe, ptr)\n(node.values.size - 1).times do |index|\n  val = compiler.compile(node.values[index + 1])\n  ident = node.idents[index + 1].as?(AST::Identifier)\n  ptr = compiler.builder.alloca(assign_type, ident.not_nil!.ident)\n  compiler.vars[ident.not_nil!.ident] = ptr\n  compiler.builder.store(val.not_nil!.to_unsafe, ptr)\nend\n"}}],"macros":[],"types":[]},{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors/Block","path":"Azula/Compiler/Visitors/Block.html","kind":"class","full_name":"Azula::Compiler::Visitors::Block","name":"Block","abstract":false,"superclass":{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors/Visitor","kind":"class","full_name":"Azula::Compiler::Visitors::Visitor","name":"Visitor"},"ancestors":[{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors/Visitor","kind":"class","full_name":"Azula::Compiler::Visitors::Visitor","name":"Visitor"},{"html_id":"github.com/OisinA/AzulaCr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/OisinA/AzulaCr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"azula/compiler/visitors/block.cr","line_number":11,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/block.cr"}],"repository_name":"github.com/OisinA/AzulaCr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors","kind":"module","full_name":"Azula::Compiler::Visitors","name":"Visitors"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"run(compiler:Compiler,node:AST::Node)-instance-method","html_id":"run(compiler:Compiler,node:AST::Node)-instance-method","name":"run","doc":null,"summary":null,"abstract":false,"args":[{"name":"compiler","doc":null,"default_value":"","external_name":"compiler","restriction":"Compiler"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Node"}],"args_string":"(compiler : Compiler, node : AST::Node)","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/block.cr#L13","def":{"name":"run","args":[{"name":"compiler","doc":null,"default_value":"","external_name":"compiler","restriction":"Compiler"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"node = node.as?(AST::Block)\nif node.nil?\n  return\nend\nnode.statements.each do |stmt|\n  compiler.compile(stmt)\nend\n"}}],"macros":[],"types":[]},{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors/BooleanLiteral","path":"Azula/Compiler/Visitors/BooleanLiteral.html","kind":"class","full_name":"Azula::Compiler::Visitors::BooleanLiteral","name":"BooleanLiteral","abstract":false,"superclass":{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors/Visitor","kind":"class","full_name":"Azula::Compiler::Visitors::Visitor","name":"Visitor"},"ancestors":[{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors/Visitor","kind":"class","full_name":"Azula::Compiler::Visitors::Visitor","name":"Visitor"},{"html_id":"github.com/OisinA/AzulaCr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/OisinA/AzulaCr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"azula/compiler/visitors/literals.cr","line_number":56,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/literals.cr"}],"repository_name":"github.com/OisinA/AzulaCr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors","kind":"module","full_name":"Azula::Compiler::Visitors","name":"Visitors"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"run(compiler:Compiler,node:AST::Node):LLVM::Value?-instance-method","html_id":"run(compiler:Compiler,node:AST::Node):LLVM::Value?-instance-method","name":"run","doc":null,"summary":null,"abstract":false,"args":[{"name":"compiler","doc":null,"default_value":"","external_name":"compiler","restriction":"Compiler"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Node"}],"args_string":"(compiler : Compiler, node : AST::Node) : LLVM::Value?","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/literals.cr#L57","def":{"name":"run","args":[{"name":"compiler","doc":null,"default_value":"","external_name":"compiler","restriction":"Compiler"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"LLVM::Value | ::Nil","visibility":"Public","body":"node = node.as?(AST::BooleanLiteral)\nif node.nil?\n  return\nend\nreturn compiler.types[Types::Type::BOOL].const_int((node.value ? 1 : 0))\n"}}],"macros":[],"types":[]},{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors/CompilerVisitor","path":"Azula/Compiler/Visitors/CompilerVisitor.html","kind":"annotation","full_name":"Azula::Compiler::Visitors::CompilerVisitor","name":"CompilerVisitor","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"azula/compiler/visitors/visitor.cr","line_number":8,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/visitor.cr"}],"repository_name":"github.com/OisinA/AzulaCr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors","kind":"module","full_name":"Azula::Compiler::Visitors","name":"Visitors"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors/ExpressionStatement","path":"Azula/Compiler/Visitors/ExpressionStatement.html","kind":"class","full_name":"Azula::Compiler::Visitors::ExpressionStatement","name":"ExpressionStatement","abstract":false,"superclass":{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors/Visitor","kind":"class","full_name":"Azula::Compiler::Visitors::Visitor","name":"Visitor"},"ancestors":[{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors/Visitor","kind":"class","full_name":"Azula::Compiler::Visitors::Visitor","name":"Visitor"},{"html_id":"github.com/OisinA/AzulaCr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/OisinA/AzulaCr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"azula/compiler/visitors/expression_statement.cr","line_number":11,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/expression_statement.cr"}],"repository_name":"github.com/OisinA/AzulaCr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors","kind":"module","full_name":"Azula::Compiler::Visitors","name":"Visitors"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"run(compiler:Compiler,node:AST::Node)-instance-method","html_id":"run(compiler:Compiler,node:AST::Node)-instance-method","name":"run","doc":null,"summary":null,"abstract":false,"args":[{"name":"compiler","doc":null,"default_value":"","external_name":"compiler","restriction":"Compiler"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Node"}],"args_string":"(compiler : Compiler, node : AST::Node)","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/expression_statement.cr#L13","def":{"name":"run","args":[{"name":"compiler","doc":null,"default_value":"","external_name":"compiler","restriction":"Compiler"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"node = node.as?(AST::ExpressionStatement)\nif node.nil?\n  return\nend\ncompiler.compile(node.expression)\n"}}],"macros":[],"types":[]},{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors/FloatLiteral","path":"Azula/Compiler/Visitors/FloatLiteral.html","kind":"class","full_name":"Azula::Compiler::Visitors::FloatLiteral","name":"FloatLiteral","abstract":false,"superclass":{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors/Visitor","kind":"class","full_name":"Azula::Compiler::Visitors::Visitor","name":"Visitor"},"ancestors":[{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors/Visitor","kind":"class","full_name":"Azula::Compiler::Visitors::Visitor","name":"Visitor"},{"html_id":"github.com/OisinA/AzulaCr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/OisinA/AzulaCr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"azula/compiler/visitors/literals.cr","line_number":24,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/literals.cr"}],"repository_name":"github.com/OisinA/AzulaCr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors","kind":"module","full_name":"Azula::Compiler::Visitors","name":"Visitors"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"run(compiler:Compiler,node:AST::Node):LLVM::Value?-instance-method","html_id":"run(compiler:Compiler,node:AST::Node):LLVM::Value?-instance-method","name":"run","doc":null,"summary":null,"abstract":false,"args":[{"name":"compiler","doc":null,"default_value":"","external_name":"compiler","restriction":"Compiler"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Node"}],"args_string":"(compiler : Compiler, node : AST::Node) : LLVM::Value?","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/literals.cr#L25","def":{"name":"run","args":[{"name":"compiler","doc":null,"default_value":"","external_name":"compiler","restriction":"Compiler"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"LLVM::Value | ::Nil","visibility":"Public","body":"node = node.as?(AST::FloatLiteral)\nif node.nil?\n  return\nend\nreturn compiler.types[Types::Type::FLOAT].const_double(node.value.to_f64)\n"}}],"macros":[],"types":[]},{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors/Function","path":"Azula/Compiler/Visitors/Function.html","kind":"class","full_name":"Azula::Compiler::Visitors::Function","name":"Function","abstract":false,"superclass":{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors/Visitor","kind":"class","full_name":"Azula::Compiler::Visitors::Visitor","name":"Visitor"},"ancestors":[{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors/Visitor","kind":"class","full_name":"Azula::Compiler::Visitors::Visitor","name":"Visitor"},{"html_id":"github.com/OisinA/AzulaCr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/OisinA/AzulaCr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"azula/compiler/visitors/function.cr","line_number":12,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/function.cr"}],"repository_name":"github.com/OisinA/AzulaCr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors","kind":"module","full_name":"Azula::Compiler::Visitors","name":"Visitors"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"run(compiler:Compiler,node:AST::Node)-instance-method","html_id":"run(compiler:Compiler,node:AST::Node)-instance-method","name":"run","doc":null,"summary":null,"abstract":false,"args":[{"name":"compiler","doc":null,"default_value":"","external_name":"compiler","restriction":"Compiler"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Node"}],"args_string":"(compiler : Compiler, node : AST::Node)","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/function.cr#L14","def":{"name":"run","args":[{"name":"compiler","doc":null,"default_value":"","external_name":"compiler","restriction":"Compiler"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"node = node.as?(AST::Function)\nif node.nil?\n  return\nend\nold_builder = compiler.builder\nargs = [] of LLVM::Type\nnode.parameters.each do |param|\n  arg_type = compiler.types.fetch(param.type, nil)\n  if arg_type.nil?\n    next\n  end\n  args << arg_type\nend\nreturn_type = compiler.types.fetch(node.return_types[0], nil)\nif return_type.nil?\n  return\nend\ncompiler.main_module.functions.add(node.function_name.ident, args, return_type) do |func|\n  compiler.current_func = func\n  entry = func.basic_blocks.append(\"entry\") do |builder|\n    compiler.builder = builder\n    index = 0\n    node.parameters.each do |param|\n      ptr = builder.alloca(compiler.types[param.type], param.ident)\n      compiler.vars[param.ident] = ptr\n      builder.store(func.params[index], ptr)\n      index = index + 1\n    end\n    compiler.compile(node.body)\n    if !compiler.has_return\n      compiler.builder.ret\n    end\n    compiler.has_return = false\n  end\n  compiler.current_func = nil\nend\ncompiler.builder = old_builder\nreturn\n"}}],"macros":[],"types":[]},{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors/FunctionCall","path":"Azula/Compiler/Visitors/FunctionCall.html","kind":"class","full_name":"Azula::Compiler::Visitors::FunctionCall","name":"FunctionCall","abstract":false,"superclass":{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors/Visitor","kind":"class","full_name":"Azula::Compiler::Visitors::Visitor","name":"Visitor"},"ancestors":[{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors/Visitor","kind":"class","full_name":"Azula::Compiler::Visitors::Visitor","name":"Visitor"},{"html_id":"github.com/OisinA/AzulaCr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/OisinA/AzulaCr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"azula/compiler/visitors/function_call.cr","line_number":12,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/function_call.cr"}],"repository_name":"github.com/OisinA/AzulaCr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors","kind":"module","full_name":"Azula::Compiler::Visitors","name":"Visitors"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"run(compiler:Compiler,node:AST::Node)-instance-method","html_id":"run(compiler:Compiler,node:AST::Node)-instance-method","name":"run","doc":null,"summary":null,"abstract":false,"args":[{"name":"compiler","doc":null,"default_value":"","external_name":"compiler","restriction":"Compiler"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Node"}],"args_string":"(compiler : Compiler, node : AST::Node)","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/function_call.cr#L14","def":{"name":"run","args":[{"name":"compiler","doc":null,"default_value":"","external_name":"compiler","restriction":"Compiler"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"node = node.as?(AST::FunctionCall)\nif node.nil?\n  return\nend\nargs = [] of LLVM::Value\nnode.arguments.each do |arg|\n  val = compiler.compile(arg)\n  if val.nil?\n    next\n  end\n  args << val\nend\nreturn compiler.builder.call(compiler.main_module.functions[node.function_name.ident], args)\n"}}],"macros":[],"types":[]},{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors/Identifier","path":"Azula/Compiler/Visitors/Identifier.html","kind":"class","full_name":"Azula::Compiler::Visitors::Identifier","name":"Identifier","abstract":false,"superclass":{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors/Visitor","kind":"class","full_name":"Azula::Compiler::Visitors::Visitor","name":"Visitor"},"ancestors":[{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors/Visitor","kind":"class","full_name":"Azula::Compiler::Visitors::Visitor","name":"Visitor"},{"html_id":"github.com/OisinA/AzulaCr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/OisinA/AzulaCr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"azula/compiler/visitors/identifier.cr","line_number":11,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/identifier.cr"}],"repository_name":"github.com/OisinA/AzulaCr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors","kind":"module","full_name":"Azula::Compiler::Visitors","name":"Visitors"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"run(compiler:Compiler,node:AST::Node)-instance-method","html_id":"run(compiler:Compiler,node:AST::Node)-instance-method","name":"run","doc":null,"summary":null,"abstract":false,"args":[{"name":"compiler","doc":null,"default_value":"","external_name":"compiler","restriction":"Compiler"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Node"}],"args_string":"(compiler : Compiler, node : AST::Node)","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/identifier.cr#L13","def":{"name":"run","args":[{"name":"compiler","doc":null,"default_value":"","external_name":"compiler","restriction":"Compiler"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"node = node.as?(AST::Identifier)\nif node.nil?\n  return\nend\nptr = compiler.vars.fetch(node.ident, nil)\nif ptr.nil?\n  return\nend\nreturn compiler.builder.load(ptr)\n"}}],"macros":[],"types":[]},{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors/If","path":"Azula/Compiler/Visitors/If.html","kind":"class","full_name":"Azula::Compiler::Visitors::If","name":"If","abstract":false,"superclass":{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors/Visitor","kind":"class","full_name":"Azula::Compiler::Visitors::Visitor","name":"Visitor"},"ancestors":[{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors/Visitor","kind":"class","full_name":"Azula::Compiler::Visitors::Visitor","name":"Visitor"},{"html_id":"github.com/OisinA/AzulaCr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/OisinA/AzulaCr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"azula/compiler/visitors/if.cr","line_number":11,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/if.cr"}],"repository_name":"github.com/OisinA/AzulaCr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors","kind":"module","full_name":"Azula::Compiler::Visitors","name":"Visitors"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"run(compiler:Compiler,node:AST::Node)-instance-method","html_id":"run(compiler:Compiler,node:AST::Node)-instance-method","name":"run","doc":null,"summary":null,"abstract":false,"args":[{"name":"compiler","doc":null,"default_value":"","external_name":"compiler","restriction":"Compiler"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Node"}],"args_string":"(compiler : Compiler, node : AST::Node)","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/if.cr#L13","def":{"name":"run","args":[{"name":"compiler","doc":null,"default_value":"","external_name":"compiler","restriction":"Compiler"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"node = node.as?(AST::If)\nif node.nil?\n  return\nend\nold_builder = compiler.builder\ncondition = compiler.compile(node.condition)\nafter_block = compiler.current_func.not_nil!.basic_blocks.append(\"after\") do |builder|\n  compiler.builder = builder\nend\nif_block = compiler.current_func.not_nil!.basic_blocks.append(\"if\") do |builder|\n  old = compiler.builder\n  compiler.builder = builder\n  compiler.compile(node.consequence)\n  if !compiler.has_return\n    compiler.builder.br(after_block)\n  end\n  compiler.builder = old\nend\nif !node.alternative.nil?\n  old = compiler.builder\n  else_func = compiler.current_func.not_nil!.basic_blocks.append(\"else\") do |builder|\n    compiler.builder = builder\n    compiler.compile(node.alternative.not_nil!)\n    if !compiler.has_return\n      builder.br(after_block)\n    end\n  end\n  old_builder.cond(condition.not_nil!.to_unsafe, if_block, else_func)\n  compiler.builder = old\n  return\nend\nold_builder.cond(condition.not_nil!.to_unsafe, if_block, after_block)\n"}}],"macros":[],"types":[]},{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors/Infix","path":"Azula/Compiler/Visitors/Infix.html","kind":"class","full_name":"Azula::Compiler::Visitors::Infix","name":"Infix","abstract":false,"superclass":{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors/Visitor","kind":"class","full_name":"Azula::Compiler::Visitors::Visitor","name":"Visitor"},"ancestors":[{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors/Visitor","kind":"class","full_name":"Azula::Compiler::Visitors::Visitor","name":"Visitor"},{"html_id":"github.com/OisinA/AzulaCr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/OisinA/AzulaCr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"azula/compiler/visitors/infix.cr","line_number":11,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/infix.cr"}],"repository_name":"github.com/OisinA/AzulaCr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors","kind":"module","full_name":"Azula::Compiler::Visitors","name":"Visitors"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"run(compiler:Compiler,node:AST::Node)-instance-method","html_id":"run(compiler:Compiler,node:AST::Node)-instance-method","name":"run","doc":null,"summary":null,"abstract":false,"args":[{"name":"compiler","doc":null,"default_value":"","external_name":"compiler","restriction":"Compiler"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Node"}],"args_string":"(compiler : Compiler, node : AST::Node)","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/infix.cr#L13","def":{"name":"run","args":[{"name":"compiler","doc":null,"default_value":"","external_name":"compiler","restriction":"Compiler"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"node = node.as?(AST::Infix)\nif node.nil?\n  return\nend\nleft = compiler.compile(node.left)\nif left.nil?\n  return\nend\nright = compiler.compile(node.right)\nif right.nil?\n  return\nend\ncase node.operator\nwhen \"+\"\n  return compiler.builder.add(left, right)\nwhen \"-\"\n  return compiler.builder.sub(left, right)\nwhen \"==\"\n  return compiler.builder.icmp(LLVM::IntPredicate::EQ, left, right)\nwhen \"<\"\n  return compiler.builder.icmp(LLVM::IntPredicate::SLT, left, right)\nwhen \"<=\"\n  return compiler.builder.icmp(LLVM::IntPredicate::SLE, left, right)\nwhen \">\"\n  return compiler.builder.icmp(LLVM::IntPredicate::SGT, left, right)\nwhen \">=\"\n  return compiler.builder.icmp(LLVM::IntPredicate::SGE, left, right)\nwhen \"%\"\n  return compiler.builder.srem(left, right)\nwhen \"/\"\n  return compiler.builder.sdiv(left, right)\nwhen \"or\"\n  return compiler.builder.or(left, right)\nwhen \"and\"\n  return compiler.builder.and(left, right)\nend\n"}}],"macros":[],"types":[]},{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors/IntegerLiteral","path":"Azula/Compiler/Visitors/IntegerLiteral.html","kind":"class","full_name":"Azula::Compiler::Visitors::IntegerLiteral","name":"IntegerLiteral","abstract":false,"superclass":{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors/Visitor","kind":"class","full_name":"Azula::Compiler::Visitors::Visitor","name":"Visitor"},"ancestors":[{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors/Visitor","kind":"class","full_name":"Azula::Compiler::Visitors::Visitor","name":"Visitor"},{"html_id":"github.com/OisinA/AzulaCr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/OisinA/AzulaCr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"azula/compiler/visitors/literals.cr","line_number":12,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/literals.cr"}],"repository_name":"github.com/OisinA/AzulaCr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors","kind":"module","full_name":"Azula::Compiler::Visitors","name":"Visitors"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"run(compiler:Compiler,node:AST::Node):LLVM::Value?-instance-method","html_id":"run(compiler:Compiler,node:AST::Node):LLVM::Value?-instance-method","name":"run","doc":null,"summary":null,"abstract":false,"args":[{"name":"compiler","doc":null,"default_value":"","external_name":"compiler","restriction":"Compiler"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Node"}],"args_string":"(compiler : Compiler, node : AST::Node) : LLVM::Value?","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/literals.cr#L13","def":{"name":"run","args":[{"name":"compiler","doc":null,"default_value":"","external_name":"compiler","restriction":"Compiler"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"LLVM::Value | ::Nil","visibility":"Public","body":"node = node.as?(AST::IntegerLiteral)\nif node.nil?\n  return\nend\nreturn compiler.types[Types::Type::INT].const_int(node.value)\n"}}],"macros":[],"types":[]},{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors/Program","path":"Azula/Compiler/Visitors/Program.html","kind":"class","full_name":"Azula::Compiler::Visitors::Program","name":"Program","abstract":false,"superclass":{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors/Visitor","kind":"class","full_name":"Azula::Compiler::Visitors::Visitor","name":"Visitor"},"ancestors":[{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors/Visitor","kind":"class","full_name":"Azula::Compiler::Visitors::Visitor","name":"Visitor"},{"html_id":"github.com/OisinA/AzulaCr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/OisinA/AzulaCr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"azula/compiler/visitors/program.cr","line_number":11,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/program.cr"}],"repository_name":"github.com/OisinA/AzulaCr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors","kind":"module","full_name":"Azula::Compiler::Visitors","name":"Visitors"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"run(compiler:Compiler,node:AST::Node)-instance-method","html_id":"run(compiler:Compiler,node:AST::Node)-instance-method","name":"run","doc":null,"summary":null,"abstract":false,"args":[{"name":"compiler","doc":null,"default_value":"","external_name":"compiler","restriction":"Compiler"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Node"}],"args_string":"(compiler : Compiler, node : AST::Node)","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/program.cr#L13","def":{"name":"run","args":[{"name":"compiler","doc":null,"default_value":"","external_name":"compiler","restriction":"Compiler"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"node = node.as?(AST::Program)\nif node.nil?\n  return\nend\nnode.statements.each do |stmt|\n  compiler.compile(stmt)\nend\n"}}],"macros":[],"types":[]},{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors/Return","path":"Azula/Compiler/Visitors/Return.html","kind":"class","full_name":"Azula::Compiler::Visitors::Return","name":"Return","abstract":false,"superclass":{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors/Visitor","kind":"class","full_name":"Azula::Compiler::Visitors::Visitor","name":"Visitor"},"ancestors":[{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors/Visitor","kind":"class","full_name":"Azula::Compiler::Visitors::Visitor","name":"Visitor"},{"html_id":"github.com/OisinA/AzulaCr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/OisinA/AzulaCr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"azula/compiler/visitors/return.cr","line_number":11,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/return.cr"}],"repository_name":"github.com/OisinA/AzulaCr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors","kind":"module","full_name":"Azula::Compiler::Visitors","name":"Visitors"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"run(compiler:Compiler,node:AST::Node)-instance-method","html_id":"run(compiler:Compiler,node:AST::Node)-instance-method","name":"run","doc":null,"summary":null,"abstract":false,"args":[{"name":"compiler","doc":null,"default_value":"","external_name":"compiler","restriction":"Compiler"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Node"}],"args_string":"(compiler : Compiler, node : AST::Node)","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/return.cr#L13","def":{"name":"run","args":[{"name":"compiler","doc":null,"default_value":"","external_name":"compiler","restriction":"Compiler"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"node = node.as?(AST::Return)\nif node.nil?\n  return\nend\nif node.values.size == 0\n  compiler.has_return = true\n  compiler.builder.ret\n  return\nend\nval = compiler.compile(node.values[0])\nif val.nil?\n  return\nend\ncompiler.has_return = true\ncompiler.builder.ret(val.not_nil!.to_unsafe)\nreturn\n"}}],"macros":[],"types":[]},{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors/StringLiteral","path":"Azula/Compiler/Visitors/StringLiteral.html","kind":"class","full_name":"Azula::Compiler::Visitors::StringLiteral","name":"StringLiteral","abstract":false,"superclass":{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors/Visitor","kind":"class","full_name":"Azula::Compiler::Visitors::Visitor","name":"Visitor"},"ancestors":[{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors/Visitor","kind":"class","full_name":"Azula::Compiler::Visitors::Visitor","name":"Visitor"},{"html_id":"github.com/OisinA/AzulaCr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/OisinA/AzulaCr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"azula/compiler/visitors/literals.cr","line_number":36,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/literals.cr"}],"repository_name":"github.com/OisinA/AzulaCr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors","kind":"module","full_name":"Azula::Compiler::Visitors","name":"Visitors"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"run(compiler:Compiler,node:AST::Node):LLVM::Value?-instance-method","html_id":"run(compiler:Compiler,node:AST::Node):LLVM::Value?-instance-method","name":"run","doc":null,"summary":null,"abstract":false,"args":[{"name":"compiler","doc":null,"default_value":"","external_name":"compiler","restriction":"Compiler"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Node"}],"args_string":"(compiler : Compiler, node : AST::Node) : LLVM::Value?","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/literals.cr#L37","def":{"name":"run","args":[{"name":"compiler","doc":null,"default_value":"","external_name":"compiler","restriction":"Compiler"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"LLVM::Value | ::Nil","visibility":"Public","body":"node = node.as?(AST::StringLiteral)\nif node.nil?\n  return\nend\nptr = compiler.builder.global_string_pointer(node.value)\nstr = compiler.context.const_struct([ptr, compiler.context.int32.const_int(node.value.bytesize), compiler.context.int32.const_int(node.value.size)])\nalloca = compiler.builder.alloca(compiler.string_type)\ncompiler.builder.store(str, alloca)\nreturn alloca\n"}}],"macros":[],"types":[]},{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors/Struct","path":"Azula/Compiler/Visitors/Struct.html","kind":"class","full_name":"Azula::Compiler::Visitors::Struct","name":"Struct","abstract":false,"superclass":{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors/Visitor","kind":"class","full_name":"Azula::Compiler::Visitors::Visitor","name":"Visitor"},"ancestors":[{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors/Visitor","kind":"class","full_name":"Azula::Compiler::Visitors::Visitor","name":"Visitor"},{"html_id":"github.com/OisinA/AzulaCr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/OisinA/AzulaCr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"azula/compiler/visitors/struct.cr","line_number":12,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/struct.cr"}],"repository_name":"github.com/OisinA/AzulaCr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors","kind":"module","full_name":"Azula::Compiler::Visitors","name":"Visitors"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"run(compiler:Compiler,node:AST::Node)-instance-method","html_id":"run(compiler:Compiler,node:AST::Node)-instance-method","name":"run","doc":null,"summary":null,"abstract":false,"args":[{"name":"compiler","doc":null,"default_value":"","external_name":"compiler","restriction":"Compiler"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Node"}],"args_string":"(compiler : Compiler, node : AST::Node)","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/struct.cr#L14","def":{"name":"run","args":[{"name":"compiler","doc":null,"default_value":"","external_name":"compiler","restriction":"Compiler"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"node = node.as?(AST::Struct)\nif node.nil?\n  return\nend\nvars = [] of LLVM::Type\nindexes = {} of String => Int32\ni = 0\nnode.fields.each do |field|\n  type = compiler.types.fetch(field.type, nil)\n  if !type.nil?\n    vars << type\n  else\n    struc = compiler.structs.fetch(field.type, nil)\n    if struc.nil?\n      return\n    end\n    vars << struc\n  end\n  indexes[field.ident] = i\n  i = i + 1\nend\ncompiler.structs[node.struct_name.ident] = compiler.context.struct(vars, node.struct_name.ident)\ncompiler.struct_fields[node.struct_name.ident] = indexes\nreturn\n"}}],"macros":[],"types":[]},{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors/StructAccess","path":"Azula/Compiler/Visitors/StructAccess.html","kind":"class","full_name":"Azula::Compiler::Visitors::StructAccess","name":"StructAccess","abstract":false,"superclass":{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors/Visitor","kind":"class","full_name":"Azula::Compiler::Visitors::Visitor","name":"Visitor"},"ancestors":[{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors/Visitor","kind":"class","full_name":"Azula::Compiler::Visitors::Visitor","name":"Visitor"},{"html_id":"github.com/OisinA/AzulaCr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/OisinA/AzulaCr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"azula/compiler/visitors/struct.cr","line_number":74,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/struct.cr"}],"repository_name":"github.com/OisinA/AzulaCr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors","kind":"module","full_name":"Azula::Compiler::Visitors","name":"Visitors"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"run(compiler:Compiler,node:AST::Node)-instance-method","html_id":"run(compiler:Compiler,node:AST::Node)-instance-method","name":"run","doc":null,"summary":null,"abstract":false,"args":[{"name":"compiler","doc":null,"default_value":"","external_name":"compiler","restriction":"Compiler"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Node"}],"args_string":"(compiler : Compiler, node : AST::Node)","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/struct.cr#L76","def":{"name":"run","args":[{"name":"compiler","doc":null,"default_value":"","external_name":"compiler","restriction":"Compiler"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"node = node.as?(AST::StructAccess)\nif node.nil?\n  return\nend\nstruc = compiler.compile(node.struct_exp)\nif struc.nil?\n  return\nend\nalloca = compiler.builder.alloca(struc.not_nil!.type)\ncompiler.builder.store(struc.not_nil!, alloca)\nfields = compiler.struct_fields[struc.type.struct_name]\nfield = fields.fetch((node.field.as(Azula::AST::Identifier)).ident, nil)\nif field.nil?\n  puts(\"invalid field\")\n  return\nend\ngep = compiler.builder.gep(alloca, compiler.context.int32.const_int(0), compiler.context.int32.const_int(field))\nload = compiler.builder.load(gep)\nreturn load\n"}}],"macros":[],"types":[]},{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors/StructInitialise","path":"Azula/Compiler/Visitors/StructInitialise.html","kind":"class","full_name":"Azula::Compiler::Visitors::StructInitialise","name":"StructInitialise","abstract":false,"superclass":{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors/Visitor","kind":"class","full_name":"Azula::Compiler::Visitors::Visitor","name":"Visitor"},"ancestors":[{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors/Visitor","kind":"class","full_name":"Azula::Compiler::Visitors::Visitor","name":"Visitor"},{"html_id":"github.com/OisinA/AzulaCr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/OisinA/AzulaCr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"azula/compiler/visitors/struct.cr","line_number":46,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/struct.cr"}],"repository_name":"github.com/OisinA/AzulaCr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors","kind":"module","full_name":"Azula::Compiler::Visitors","name":"Visitors"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"run(compiler:Compiler,node:AST::Node)-instance-method","html_id":"run(compiler:Compiler,node:AST::Node)-instance-method","name":"run","doc":null,"summary":null,"abstract":false,"args":[{"name":"compiler","doc":null,"default_value":"","external_name":"compiler","restriction":"Compiler"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Node"}],"args_string":"(compiler : Compiler, node : AST::Node)","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/struct.cr#L48","def":{"name":"run","args":[{"name":"compiler","doc":null,"default_value":"","external_name":"compiler","restriction":"Compiler"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"node = node.as?(AST::StructInitialise)\nif node.nil?\n  return\nend\nstruc = compiler.structs.fetch(node.struct_name.ident, nil)\nif struc.nil?\n  puts(\"unknown struct\")\n  return\nend\nvals = [] of LLVM::Value\nnode.values.each do |val|\n  value = compiler.compile(val)\n  if !value.nil?\n    vals << value\n  end\nend\nval = struc.context.const_struct(vals)\nreturn val\n"}}],"macros":[],"types":[]},{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors/Visitor","path":"Azula/Compiler/Visitors/Visitor.html","kind":"class","full_name":"Azula::Compiler::Visitors::Visitor","name":"Visitor","abstract":true,"superclass":{"html_id":"github.com/OisinA/AzulaCr/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/OisinA/AzulaCr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/OisinA/AzulaCr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"azula/compiler/visitors/visitor.cr","line_number":11,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/visitor.cr"}],"repository_name":"github.com/OisinA/AzulaCr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors/Assign","kind":"class","full_name":"Azula::Compiler::Visitors::Assign","name":"Assign"},{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors/Block","kind":"class","full_name":"Azula::Compiler::Visitors::Block","name":"Block"},{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors/BooleanLiteral","kind":"class","full_name":"Azula::Compiler::Visitors::BooleanLiteral","name":"BooleanLiteral"},{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors/ExpressionStatement","kind":"class","full_name":"Azula::Compiler::Visitors::ExpressionStatement","name":"ExpressionStatement"},{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors/FloatLiteral","kind":"class","full_name":"Azula::Compiler::Visitors::FloatLiteral","name":"FloatLiteral"},{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors/Function","kind":"class","full_name":"Azula::Compiler::Visitors::Function","name":"Function"},{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors/FunctionCall","kind":"class","full_name":"Azula::Compiler::Visitors::FunctionCall","name":"FunctionCall"},{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors/Identifier","kind":"class","full_name":"Azula::Compiler::Visitors::Identifier","name":"Identifier"},{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors/If","kind":"class","full_name":"Azula::Compiler::Visitors::If","name":"If"},{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors/Infix","kind":"class","full_name":"Azula::Compiler::Visitors::Infix","name":"Infix"},{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors/IntegerLiteral","kind":"class","full_name":"Azula::Compiler::Visitors::IntegerLiteral","name":"IntegerLiteral"},{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors/Program","kind":"class","full_name":"Azula::Compiler::Visitors::Program","name":"Program"},{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors/Return","kind":"class","full_name":"Azula::Compiler::Visitors::Return","name":"Return"},{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors/StringLiteral","kind":"class","full_name":"Azula::Compiler::Visitors::StringLiteral","name":"StringLiteral"},{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors/Struct","kind":"class","full_name":"Azula::Compiler::Visitors::Struct","name":"Struct"},{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors/StructAccess","kind":"class","full_name":"Azula::Compiler::Visitors::StructAccess","name":"StructAccess"},{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors/StructInitialise","kind":"class","full_name":"Azula::Compiler::Visitors::StructInitialise","name":"StructInitialise"},{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors/While","kind":"class","full_name":"Azula::Compiler::Visitors::While","name":"While"}],"including_types":[],"namespace":{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors","kind":"module","full_name":"Azula::Compiler::Visitors","name":"Visitors"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"run(compiler:Compiler,node:AST::Node):LLVM::Value?-instance-method","html_id":"run(compiler:Compiler,node:AST::Node):LLVM::Value?-instance-method","name":"run","doc":null,"summary":null,"abstract":true,"args":[{"name":"compiler","doc":null,"default_value":"","external_name":"compiler","restriction":"Compiler"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Node"}],"args_string":"(compiler : Compiler, node : AST::Node) : LLVM::Value?","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/visitor.cr#L12","def":{"name":"run","args":[{"name":"compiler","doc":null,"default_value":"","external_name":"compiler","restriction":"Compiler"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"LLVM::Value | ::Nil","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors/While","path":"Azula/Compiler/Visitors/While.html","kind":"class","full_name":"Azula::Compiler::Visitors::While","name":"While","abstract":false,"superclass":{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors/Visitor","kind":"class","full_name":"Azula::Compiler::Visitors::Visitor","name":"Visitor"},"ancestors":[{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors/Visitor","kind":"class","full_name":"Azula::Compiler::Visitors::Visitor","name":"Visitor"},{"html_id":"github.com/OisinA/AzulaCr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/OisinA/AzulaCr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"azula/compiler/visitors/while.cr","line_number":12,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/while.cr"}],"repository_name":"github.com/OisinA/AzulaCr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/OisinA/AzulaCr/Azula/Compiler/Visitors","kind":"module","full_name":"Azula::Compiler::Visitors","name":"Visitors"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"run(compiler:Compiler,node:AST::Node)-instance-method","html_id":"run(compiler:Compiler,node:AST::Node)-instance-method","name":"run","doc":null,"summary":null,"abstract":false,"args":[{"name":"compiler","doc":null,"default_value":"","external_name":"compiler","restriction":"Compiler"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Node"}],"args_string":"(compiler : Compiler, node : AST::Node)","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/compiler/visitors/while.cr#L14","def":{"name":"run","args":[{"name":"compiler","doc":null,"default_value":"","external_name":"compiler","restriction":"Compiler"},{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"node = node.as?(AST::While)\nif node.nil?\n  return\nend\nold_builder = compiler.builder\nloop_cond_builder = compiler.builder\ncond : LLVM::Value | ::Nil = nil\nafter_block = compiler.current_func.not_nil!.basic_blocks.append(\"after\") do |builder|\n  compiler.builder = builder\nend\nloop_cond = compiler.current_func.not_nil!.basic_blocks.append(\"loop-cond\") do |builder|\n  old = compiler.builder\n  compiler.builder = builder\n  cond = compiler.compile(node.iterator)\n  loop_cond_builder = builder\n  compiler.builder = old\nend\nloop_block = compiler.current_func.not_nil!.basic_blocks.append(\"loop\") do |builder|\n  old = compiler.builder\n  compiler.builder = builder\n  compiler.compile(node.body)\n  compiler.builder.br(loop_cond)\n  compiler.builder = old\nend\nif !cond.nil?\n  loop_cond_builder.cond(cond, loop_block, after_block)\nend\nold_builder.br(loop_cond)\nreturn\n"}}],"macros":[],"types":[]}]}]},{"html_id":"github.com/OisinA/AzulaCr/Azula/Lexer","path":"Azula/Lexer.html","kind":"class","full_name":"Azula::Lexer","name":"Lexer","abstract":false,"superclass":{"html_id":"github.com/OisinA/AzulaCr/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/OisinA/AzulaCr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/OisinA/AzulaCr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"azula/lexer/lexer.cr","line_number":5,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/lexer/lexer.cr"}],"repository_name":"github.com/OisinA/AzulaCr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/OisinA/AzulaCr/Azula","kind":"module","full_name":"Azula","name":"Azula"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(input:String)-class-method","html_id":"new(input:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"input","doc":null,"default_value":"","external_name":"input","restriction":"String"}],"args_string":"(input : String)","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/lexer/lexer.cr#L18","def":{"name":"new","args":[{"name":"input","doc":null,"default_value":"","external_name":"input","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(input)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"file=(file)-instance-method","html_id":"file=(file)-instance-method","name":"file=","doc":null,"summary":null,"abstract":false,"args":[{"name":"file","doc":null,"default_value":"","external_name":"file","restriction":""}],"args_string":"(file)","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/lexer/lexer.cr#L16","def":{"name":"file=","args":[{"name":"file","doc":null,"default_value":"","external_name":"file","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@file = file"}},{"id":"next_line-instance-method","html_id":"next_line-instance-method","name":"next_line","doc":"Skip to the next line in the event of a comment","summary":"<p>Skip to the next line in the event of a comment</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/lexer/lexer.cr#L178","def":{"name":"next_line","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.read_char\ni = 0\nwhile ((@current_char != '\\n') && (@current_char != Char::ZERO)) && (@current_char != '\\r')\n  self.read_char\nend\n"}},{"id":"next_token:Token-instance-method","html_id":"next_token:Token-instance-method","name":"next_token","doc":"Advance current token pointer to the next token and generate the token","summary":"<p>Advance current token pointer to the next token and generate the token</p>","abstract":false,"args":[],"args_string":" : Token","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/lexer/lexer.cr#L40","def":{"name":"next_token","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Token","visibility":"Public","body":"self.skip_whitespace\ntoken_type : TokenType\nliteral : String | Char\nline_num = @current_line\nchar_num = @current_char_num\nread = true\ncase @current_char\nwhen '='\n  if self.peek_char == '='\n    ch = @current_char\n    self.read_char\n    token_type, literal = TokenType::EQ, \"#{ch}#{@current_char}\"\n  else\n    token_type, literal = TokenType::ASSIGN, @current_char\n  end\nwhen ':'\n  token_type, literal = TokenType::COLON, @current_char\nwhen ';'\n  token_type, literal = TokenType::SEMICOLON, @current_char\nwhen '\"'\n  str = self.read_string\n  token_type, literal = TokenType::STRING, str\nwhen '!'\n  if self.peek_char == '='\n    ch = @current_char\n    self.read_char\n    token_type, literal = TokenType::NOT_EQ, \"#{ch}#{@current_char}\"\n  else\n    token_type, literal = TokenType::NOT, @current_char\n  end\nwhen '+'\n  token_type, literal = TokenType::PLUS, @current_char\nwhen '-'\n  token_type, literal = TokenType::MINUS, @current_char\nwhen '*'\n  if self.peek_char == '*'\n    ch = @current_char\n    self.read_char\n    token_type, literal = TokenType::EXPONENT, \"#{ch}#{@current_char}\"\n  else\n    token_type, literal = TokenType::ASTERISK, @current_char\n  end\nwhen '%'\n  token_type, literal = TokenType::MODULO, @current_char\nwhen '/'\n  if self.peek_char == '/'\n    self.next_line\n    return self.next_token\n  else\n    token_type, literal = TokenType::SLASH, @current_char\n  end\nwhen '<'\n  if self.peek_char == '='\n    ch = @current_char\n    self.read_char\n    token_type, literal = TokenType::LT_EQ, \"#{ch}#{@current_char}\"\n  else\n    token_type, literal = TokenType::LT, @current_char\n  end\nwhen '>'\n  if self.peek_char == '='\n    ch = @current_char\n    self.read_char\n    token_type, literal = TokenType::GT_EQ, \"#{ch}#{@current_char}\"\n  else\n    token_type, literal = TokenType::GT, @current_char\n  end\nwhen '('\n  token_type, literal = TokenType::LBRACKET, @current_char\nwhen ')'\n  token_type, literal = TokenType::RBRACKET, @current_char\nwhen '{'\n  token_type, literal = TokenType::LBRACE, @current_char\nwhen '}'\n  token_type, literal = TokenType::RBRACE, @current_char\nwhen '['\n  token_type, literal = TokenType::LSQUARE, @current_char\nwhen ']'\n  token_type, literal = TokenType::RSQUARE, @current_char\nwhen ','\n  token_type, literal = TokenType::COMMA, @current_char\nwhen '.'\n  token_type, literal = TokenType::DOT, @current_char\nwhen Char::ZERO\n  token_type, literal = TokenType::EOF, @current_char\nelse\n  if @current_char.letter? || (@current_char == '_')\n    ident = self.read_identifier\n    type = Azula::Keywords.fetch(ident, TokenType::IDENTIFIER)\n    token_type, literal = type, ident\n    read = false\n  else\n    if @current_char.number?\n      num = read_number\n      token_type, literal = TokenType::NUMBER, num\n      read = false\n    else\n      token_type, literal = TokenType::ILLEGAL, @current_char\n    end\n  end\nend\nif !read\nelse\n  self.read_char\nend\nreturn Token.new(token_type, \"#{literal}\", @file, line_num, char_num)\n"}},{"id":"peek_char-instance-method","html_id":"peek_char-instance-method","name":"peek_char","doc":"Returns the character after the current character","summary":"<p>Returns the character after the current character</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/lexer/lexer.cr#L173","def":{"name":"peek_char","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"return @read_position >= @input.size ? Char::ZERO : @input[@read_position]"}},{"id":"read_char-instance-method","html_id":"read_char-instance-method","name":"read_char","doc":"Read the next character of the input","summary":"<p>Read the next character of the input</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/lexer/lexer.cr#L23","def":{"name":"read_char","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @read_position >= @input.size\n  @current_char = Char::ZERO\nelse\n  @current_char = @input[@read_position]\nend\nif @current_char == '\\n'\n  @current_line = @current_line + 1\n  @current_char_num = 0\nelse\n  @current_char_num = @current_char_num + 1\nend\n@position = @read_position\n@read_position = @read_position + 1\n"}},{"id":"read_identifier:String-instance-method","html_id":"read_identifier:String-instance-method","name":"read_identifier","doc":"Read an identifier until it finds a non-alphanumeric character eg. foo","summary":"<p>Read an identifier until it finds a non-alphanumeric character eg.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/lexer/lexer.cr#L148","def":{"name":"read_identifier","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"position = @position\nwhile @current_char.alphanumeric? || (@current_char == '_')\n  self.read_char\nend\nreturn @input[position...@position]\n"}},{"id":"read_number:String-instance-method","html_id":"read_number:String-instance-method","name":"read_number","doc":"Read a number until there are no more numbers","summary":"<p>Read a number until there are no more numbers</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/lexer/lexer.cr#L157","def":{"name":"read_number","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"position = @position\nwhile @current_char.number?\n  self.read_char\nend\nreturn @input[position...@position]\n"}},{"id":"read_string:String-instance-method","html_id":"read_string:String-instance-method","name":"read_string","doc":"Keep reading until it reaches a \" character and returns the string","summary":"<p>Keep reading until it reaches a \" character and returns the string</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/lexer/lexer.cr#L187","def":{"name":"read_string","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"self.read_char\nposition = @read_position - 1\nwhile (@current_char != '\"') && (@current_char != Char::ZERO)\n  self.read_char\nend\nreturn @input[position...(@read_position - 1)]\n"}},{"id":"skip_whitespace-instance-method","html_id":"skip_whitespace-instance-method","name":"skip_whitespace","doc":"Continue reading until it reaches a non-whitespace character","summary":"<p>Continue reading until it reaches a non-whitespace character</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/lexer/lexer.cr#L166","def":{"name":"skip_whitespace","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"while (((@current_char == '\\n') || (@current_char == ' ')) || (@current_char == '\\t')) || (@current_char == '\\r')\n  self.read_char\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/OisinA/AzulaCr/Azula/OperatorPrecedence","path":"Azula/OperatorPrecedence.html","kind":"enum","full_name":"Azula::OperatorPrecedence","name":"OperatorPrecedence","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/OisinA/AzulaCr/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"github.com/OisinA/AzulaCr/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/OisinA/AzulaCr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/OisinA/AzulaCr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"azula/parser/parser.cr","line_number":42,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/parser/parser.cr"}],"repository_name":"github.com/OisinA/AzulaCr","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"LOWEST","name":"LOWEST","value":"0","doc":null,"summary":null},{"id":"COMPARISON","name":"COMPARISON","value":"1","doc":null,"summary":null},{"id":"EQUALS","name":"EQUALS","value":"2","doc":null,"summary":null},{"id":"LESS_GREATER","name":"LESS_GREATER","value":"3","doc":null,"summary":null},{"id":"SUM","name":"SUM","value":"4","doc":null,"summary":null},{"id":"PRODUCT","name":"PRODUCT","value":"5","doc":null,"summary":null},{"id":"PREFIX","name":"PREFIX","value":"6","doc":null,"summary":null},{"id":"CALL","name":"CALL","value":"7","doc":null,"summary":null},{"id":"ACCESS","name":"ACCESS","value":"8","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/OisinA/AzulaCr/Azula","kind":"module","full_name":"Azula","name":"Azula"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"access?-instance-method","html_id":"access?-instance-method","name":"access?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/parser/parser.cr#L51","def":{"name":"access?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == ACCESS"}},{"id":"call?-instance-method","html_id":"call?-instance-method","name":"call?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/parser/parser.cr#L50","def":{"name":"call?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == CALL"}},{"id":"comparison?-instance-method","html_id":"comparison?-instance-method","name":"comparison?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/parser/parser.cr#L44","def":{"name":"comparison?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == COMPARISON"}},{"id":"equals?-instance-method","html_id":"equals?-instance-method","name":"equals?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/parser/parser.cr#L45","def":{"name":"equals?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == EQUALS"}},{"id":"less_greater?-instance-method","html_id":"less_greater?-instance-method","name":"less_greater?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/parser/parser.cr#L46","def":{"name":"less_greater?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == LESS_GREATER"}},{"id":"lowest?-instance-method","html_id":"lowest?-instance-method","name":"lowest?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/parser/parser.cr#L43","def":{"name":"lowest?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == LOWEST"}},{"id":"prefix?-instance-method","html_id":"prefix?-instance-method","name":"prefix?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/parser/parser.cr#L49","def":{"name":"prefix?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == PREFIX"}},{"id":"product?-instance-method","html_id":"product?-instance-method","name":"product?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/parser/parser.cr#L48","def":{"name":"product?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == PRODUCT"}},{"id":"sum?-instance-method","html_id":"sum?-instance-method","name":"sum?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/parser/parser.cr#L47","def":{"name":"sum?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == SUM"}}],"macros":[],"types":[]},{"html_id":"github.com/OisinA/AzulaCr/Azula/Parser","path":"Azula/Parser.html","kind":"class","full_name":"Azula::Parser","name":"Parser","abstract":false,"superclass":{"html_id":"github.com/OisinA/AzulaCr/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/OisinA/AzulaCr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/OisinA/AzulaCr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"azula/parser/parser.cr","line_number":74,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/parser/parser.cr"}],"repository_name":"github.com/OisinA/AzulaCr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/OisinA/AzulaCr/Azula","kind":"module","full_name":"Azula","name":"Azula"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(lexer)-class-method","html_id":"new(lexer)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"lexer","doc":null,"default_value":"","external_name":"lexer","restriction":""}],"args_string":"(lexer)","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/parser/parser.cr#L85","def":{"name":"new","args":[{"name":"lexer","doc":null,"default_value":"","external_name":"lexer","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(lexer)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"add_error(error:String)-instance-method","html_id":"add_error(error:String)-instance-method","name":"add_error","doc":"Add an error to the errors list","summary":"<p>Add an error to the errors list</p>","abstract":false,"args":[{"name":"error","doc":null,"default_value":"","external_name":"error","restriction":"String"}],"args_string":"(error : String)","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/parser/parser.cr#L604","def":{"name":"add_error","args":[{"name":"error","doc":null,"default_value":"","external_name":"error","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@errors << \"#{error} (file #{@current_token.file}, line #{@current_token.linenumber}, char #{@current_token.charnumber})\""}},{"id":"errors:Array(String)-instance-method","html_id":"errors:Array(String)-instance-method","name":"errors","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/parser/parser.cr#L83","def":{"name":"errors","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@errors"}},{"id":"expect_peek(t:TokenType):Bool-instance-method","html_id":"expect_peek(t:TokenType):Bool-instance-method","name":"expect_peek","doc":"Expect next token to be of a type, otherwise add new error","summary":"<p>Expect next token to be of a type, otherwise add new error</p>","abstract":false,"args":[{"name":"t","doc":null,"default_value":"","external_name":"t","restriction":"TokenType"}],"args_string":"(t : TokenType) : Bool","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/parser/parser.cr#L202","def":{"name":"expect_peek","args":[{"name":"t","doc":null,"default_value":"","external_name":"t","restriction":"TokenType"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"if @peek_token.type == t\n  self.next_token\n  return true\nend\nself.add_error(\"expected next token to be #{t}, got #{@peek_token.type} instead\")\nreturn false\n"}},{"id":"next_token-instance-method","html_id":"next_token-instance-method","name":"next_token","doc":"Advance current token pointer to the next token","summary":"<p>Advance current token pointer to the next token</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/parser/parser.cr#L122","def":{"name":"next_token","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@current_token = @peek_token\n@peek_token = @lexer.next_token\n"}},{"id":"parse_assign_statement:AST::Assign?-instance-method","html_id":"parse_assign_statement:AST::Assign?-instance-method","name":"parse_assign_statement","doc":"Parse an assign statement, where value(s) are assigned to identifier(s)","summary":"<p>Parse an assign statement, where value(s) are assigned to identifier(s)</p>","abstract":false,"args":[],"args_string":" : AST::Assign?","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/parser/parser.cr#L234","def":{"name":"parse_assign_statement","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AST::Assign | ::Nil","visibility":"Public","body":"t = @current_token\nidents = [] of AST::TypedIdentifier | AST::Identifier\ntype = Types::Type.parse?(@current_token.literal)\nif @peek_token.type == TokenType::IDENTIFIER\n  ident = parse_typed_identifier\nelse\n  ident = parse_identifier\nend\nif ident.nil?\n  ident = AST::Identifier.new(@current_token, @current_token.literal)\nend\nidents << ident\nwhile @peek_token.type == TokenType::COMMA\n  self.next_token\n  self.next_token\n  type = Types::Type.parse?(@current_token.literal)\n  if @peek_token.type == TokenType::IDENTIFIER\n    ident = parse_typed_identifier\n  else\n    ident = parse_identifier\n  end\n  if ident.nil?\n    return\n  end\n  idents << ident\nend\nexpect_peek_return(ASSIGN)\nvalues = self.parse_expression_list(TokenType::SEMICOLON)\nnil_return(values)\nreturn AST::Assign.new(t, idents, values.not_nil!)\n"}},{"id":"parse_block_statement:AST::Block?-instance-method","html_id":"parse_block_statement:AST::Block?-instance-method","name":"parse_block_statement","doc":"Parse a block of statements","summary":"<p>Parse a block of statements</p>","abstract":false,"args":[],"args_string":" : AST::Block?","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/parser/parser.cr#L174","def":{"name":"parse_block_statement","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AST::Block | ::Nil","visibility":"Public","body":"tok = @current_token\nstmts = [] of AST::Statement\nself.next_token\nwhile (@current_token.type != TokenType::RBRACE) && (@current_token.type != TokenType::EOF)\n  if @current_token.type == TokenType::EOF\n    self.add_error(\"body has no close\")\n    return\n  end\n  stmt = self.parse_statement\n  if !stmt.nil?\n    stmts << stmt\n  else\n    return\n  end\n  self.next_token\nend\nif @current_token.type != TokenType::RBRACE\n  self.add_error(\"expected {, got EOF\")\n  return\nend\nreturn AST::Block.new(tok, stmts)\n"}},{"id":"parse_boolean_literal:AST::BooleanLiteral-instance-method","html_id":"parse_boolean_literal:AST::BooleanLiteral-instance-method","name":"parse_boolean_literal","doc":"Parse a boolean literal, either true or false","summary":"<p>Parse a boolean literal, either true or false</p>","abstract":false,"args":[],"args_string":" : AST::BooleanLiteral","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/parser/parser.cr#L315","def":{"name":"parse_boolean_literal","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AST::BooleanLiteral","visibility":"Public","body":"return AST::BooleanLiteral.new(@current_token, @current_token.type == TokenType::TRUE)"}},{"id":"parse_expression(precedence:OperatorPrecedence=OperatorPrecedence::LOWEST,close:TokenType=TokenType::SEMICOLON):AST::Expression?-instance-method","html_id":"parse_expression(precedence:OperatorPrecedence=OperatorPrecedence::LOWEST,close:TokenType=TokenType::SEMICOLON):AST::Expression?-instance-method","name":"parse_expression","doc":"Parse an expression - something that has a return value","summary":"<p>Parse an expression - something that has a return value</p>","abstract":false,"args":[{"name":"precedence","doc":null,"default_value":"OperatorPrecedence::LOWEST","external_name":"precedence","restriction":"OperatorPrecedence"},{"name":"close","doc":null,"default_value":"TokenType::SEMICOLON","external_name":"close","restriction":"TokenType"}],"args_string":"(precedence : OperatorPrecedence = <span class=\"t\">OperatorPrecedence</span><span class=\"t\">::</span><span class=\"t\">LOWEST</span>, close : TokenType = <span class=\"t\">TokenType</span><span class=\"t\">::</span><span class=\"t\">SEMICOLON</span>) : AST::Expression?","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/parser/parser.cr#L212","def":{"name":"parse_expression","args":[{"name":"precedence","doc":null,"default_value":"OperatorPrecedence::LOWEST","external_name":"precedence","restriction":"OperatorPrecedence"},{"name":"close","doc":null,"default_value":"TokenType::SEMICOLON","external_name":"close","restriction":"TokenType"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AST::Expression | ::Nil","visibility":"Public","body":"prefix = @prefix_funcs.fetch(@current_token.type, nil)\nif prefix.nil?\n  self.add_error(\"no prefix function for #{@current_token.type}\")\n  return\nend\nleft = prefix.call\nwhile (@peek_token.type != close) && precedence < (self.token_precedence(@peek_token.type))\n  infix = @infix_funcs.fetch(@peek_token.type, nil)\n  nil_return(infix)\n  self.next_token\n  nil_return(left)\n  left = infix.call(left.not_nil!)\nend\nreturn left\n"}},{"id":"parse_expression_list(last:TokenType)-instance-method","html_id":"parse_expression_list(last:TokenType)-instance-method","name":"parse_expression_list","doc":"Parse a list of expressions, separated by a comma","summary":"<p>Parse a list of expressions, separated by a comma</p>","abstract":false,"args":[{"name":"last","doc":null,"default_value":"","external_name":"last","restriction":"TokenType"}],"args_string":"(last : TokenType)","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/parser/parser.cr#L353","def":{"name":"parse_expression_list","args":[{"name":"last","doc":null,"default_value":"","external_name":"last","restriction":"TokenType"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Array(AST::Expression)\nexps = [] of AST::Expression\nif @peek_token.type == last\n  self.next_token\n  return exps\nend\nself.next_token\nexp = self.parse_expression\nif !exp.nil?\n  exps << exp\nend\nwhile @peek_token.type == TokenType::COMMA\n  self.next_token\n  self.next_token\n  exp = self.parse_expression\n  if !exp.nil?\n    exps << exp\n  end\nend\nif !(expect_peek(last))\nend\nreturn exps\n"}},{"id":"parse_expression_statement:AST::ExpressionStatement?-instance-method","html_id":"parse_expression_statement:AST::ExpressionStatement?-instance-method","name":"parse_expression_statement","doc":"Parse an expression statement, which is just an expression with nothing being done with that value","summary":"<p>Parse an expression statement, which is just an expression with nothing being done with that value</p>","abstract":false,"args":[],"args_string":" : AST::ExpressionStatement?","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/parser/parser.cr#L482","def":{"name":"parse_expression_statement","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AST::ExpressionStatement | ::Nil","visibility":"Public","body":"tok = @current_token\nexp = self.parse_expression\nnil_return(exp)\nexpect_peek_return(SEMICOLON)\nreturn AST::ExpressionStatement.new(tok, exp.not_nil!)\n"}},{"id":"parse_function_call_expression(function:AST::Expression)-instance-method","html_id":"parse_function_call_expression(function:AST::Expression)-instance-method","name":"parse_function_call_expression","doc":"Parse a function call, eg. my_func(5)","summary":"<p>Parse a function call, eg.</p>","abstract":false,"args":[{"name":"function","doc":null,"default_value":"","external_name":"function","restriction":"AST::Expression"}],"args_string":"(function : AST::Expression)","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/parser/parser.cr#L471","def":{"name":"parse_function_call_expression","args":[{"name":"function","doc":null,"default_value":"","external_name":"function","restriction":"AST::Expression"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::Union(AST::Expression, ::Nil)\nfunction = function.as?(AST::Identifier)\nnil_return(function)\ntok = @current_token\nargs = self.parse_expression_list(TokenType::RBRACKET)\nnil_return(args)\nreturn AST::FunctionCall.new(tok, function.as(AST::Identifier), args)\n"}},{"id":"parse_function_parameters:Array(AST::TypedIdentifier)?-instance-method","html_id":"parse_function_parameters:Array(AST::TypedIdentifier)?-instance-method","name":"parse_function_parameters","doc":"Parse the parameters of a function, returning a list of TypedIdentifiers","summary":"<p>Parse the parameters of a function, returning a list of TypedIdentifiers</p>","abstract":false,"args":[],"args_string":" : Array(AST::TypedIdentifier)?","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/parser/parser.cr#L414","def":{"name":"parse_function_parameters","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(AST::TypedIdentifier) | ::Nil","visibility":"Public","body":"idents = [] of AST::TypedIdentifier\nif @peek_token.type == TokenType::RBRACKET\n  self.next_token\n  return idents\nend\nself.next_token\nident = self.parse_typed_identifier\nnil_return(ident)\nidents << ident\nwhile @peek_token.type == TokenType::COMMA\n  self.next_token\n  self.next_token\n  ident = self.parse_typed_identifier\n  nil_return(ident)\n  idents << ident\nend\nexpect_peek_return(RBRACKET)\nreturn idents\n"}},{"id":"parse_function_return_types:Array(Types::Type|String)?-instance-method","html_id":"parse_function_return_types:Array(Types::Type|String)?-instance-method","name":"parse_function_return_types","doc":"Parse the return types of a function","summary":"<p>Parse the return types of a function</p>","abstract":false,"args":[],"args_string":" : Array(Types::Type | String)?","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/parser/parser.cr#L443","def":{"name":"parse_function_return_types","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Types::Type | String) | ::Nil","visibility":"Public","body":"types = [] of Types::Type | String\nif @current_token.type == TokenType::LBRACKET\n  self.next_token\n  type_or_literal\n  while @peek_token.type == TokenType::COMMA\n    self.next_token\n    self.next_token\n    type_or_literal\n  end\n  expect_peek_return(RBRACKET)\nelse\n  type_or_literal\nend\nreturn types\n"}},{"id":"parse_function_statement:AST::Function?-instance-method","html_id":"parse_function_statement:AST::Function?-instance-method","name":"parse_function_statement","doc":"Parse a function definition","summary":"<p>Parse a function definition</p>","abstract":false,"args":[],"args_string":" : AST::Function?","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/parser/parser.cr#L388","def":{"name":"parse_function_statement","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AST::Function | ::Nil","visibility":"Public","body":"tok = @current_token\nself.next_token\nname = AST::Identifier.new(@current_token, @current_token.literal)\nexpect_peek_return(LBRACKET)\nparams = self.parse_function_parameters\nnil_return(params)\nexpect_peek_return(COLON)\nself.next_token\nreturn_types = self.parse_function_return_types\nnil_return(return_types)\nexpect_peek_return(LBRACE)\nbody = self.parse_block_statement\nnil_return(body)\nreturn AST::Function.new(tok, name, params, return_types, body.not_nil!)\n"}},{"id":"parse_grouped_expression:AST::Expression?-instance-method","html_id":"parse_grouped_expression:AST::Expression?-instance-method","name":"parse_grouped_expression","doc":"Parse a grouped expression, eg. (5 + 2)","summary":"<p>Parse a grouped expression, eg.</p>","abstract":false,"args":[],"args_string":" : AST::Expression?","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/parser/parser.cr#L462","def":{"name":"parse_grouped_expression","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AST::Expression | ::Nil","visibility":"Public","body":"self.next_token\nexp = self.parse_expression\nexpect_peek_return(RBRACKET)\nreturn exp\n"}},{"id":"parse_identifier:AST::Identifier?-instance-method","html_id":"parse_identifier:AST::Identifier?-instance-method","name":"parse_identifier","doc":"Parse an identifier eg. x, y, my_func","summary":"<p>Parse an identifier eg.</p>","abstract":false,"args":[],"args_string":" : AST::Identifier?","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/parser/parser.cr#L383","def":{"name":"parse_identifier","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AST::Identifier | ::Nil","visibility":"Public","body":"return AST::Identifier.new(@current_token, @current_token.literal)"}},{"id":"parse_if_statement(top_level:Bool):AST::If?-instance-method","html_id":"parse_if_statement(top_level:Bool):AST::If?-instance-method","name":"parse_if_statement","doc":"Parse an if statement, checking for elseifs and elses","summary":"<p>Parse an if statement, checking for elseifs and elses</p>","abstract":false,"args":[{"name":"top_level","doc":null,"default_value":"","external_name":"top_level","restriction":"Bool"}],"args_string":"(top_level : Bool) : AST::If?","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/parser/parser.cr#L528","def":{"name":"parse_if_statement","args":[{"name":"top_level","doc":null,"default_value":"","external_name":"top_level","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AST::If | ::Nil","visibility":"Public","body":"tok = @current_token\nexpect_peek_return(LBRACKET)\nself.next_token\nexp = self.parse_expression(OperatorPrecedence::LOWEST, TokenType::RBRACKET)\nif exp.nil?\n  self.add_error(\"invalid condition\")\nend\nnil_return(exp)\nexpect_peek_return(RBRACKET)\nexpect_peek_return(LBRACE)\ncond = self.parse_block_statement\nnil_return(cond)\nif !top_level\n  return AST::If.new(tok, exp.not_nil!, cond.not_nil!, [] of AST::If, nil)\nend\nalts = [] of AST::If\nwhile @peek_token.type == TokenType::ELSEIF\n  self.next_token\n  alt = self.parse_if_statement(false)\n  nil_return(alt)\n  alts << alt\nend\nalternative : AST::Block | ::Nil\nif @peek_token.type == TokenType::ELSE\n  self.next_token\n  expect_peek_return(LBRACE)\n  alternative = self.parse_block_statement\n  nil_return(alternative)\nend\nreturn AST::If.new(tok, exp.not_nil!, cond.not_nil!, alts, alternative)\n"}},{"id":"parse_infix_expression(left:AST::Expression)-instance-method","html_id":"parse_infix_expression(left:AST::Expression)-instance-method","name":"parse_infix_expression","doc":"Parse an infix expression, eg 5 + 5, 10 == 2","summary":"<p>Parse an infix expression, eg 5 + 5, 10 == 2</p>","abstract":false,"args":[{"name":"left","doc":null,"default_value":"","external_name":"left","restriction":"AST::Expression"}],"args_string":"(left : AST::Expression)","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/parser/parser.cr#L329","def":{"name":"parse_infix_expression","args":[{"name":"left","doc":null,"default_value":"","external_name":"left","restriction":"AST::Expression"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::Union(AST::Expression, ::Nil)\ntok = @current_token\noperator = @current_token.literal\nprecedence = token_precedence(tok.type)\nself.next_token\nright = parse_expression(precedence)\nnil_return(right)\nreturn AST::Infix.new(tok, left, operator, right.not_nil!)\n"}},{"id":"parse_number_literal:AST::IntegerLiteral?|AST::FloatLiteral?-instance-method","html_id":"parse_number_literal:AST::IntegerLiteral?|AST::FloatLiteral?-instance-method","name":"parse_number_literal","doc":"Parse a number literal and convert it to either an int or float","summary":"<p>Parse a number literal and convert it to either an int or float</p>","abstract":false,"args":[],"args_string":" : AST::IntegerLiteral? | AST::FloatLiteral?","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/parser/parser.cr#L293","def":{"name":"parse_number_literal","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AST::IntegerLiteral | ::Nil | AST::FloatLiteral | ::Nil","visibility":"Public","body":"if @peek_token.type == TokenType::DOT\n  first = @current_token\n  next_token\n  next_token\n  second = @current_token\n  val = \"#{first.literal}.#{second.literal}\".to_f32\n  if !val.nil?\n    return AST::FloatLiteral.new(first, val)\n  end\n  self.add_error(\"could not parse float\")\n  return\nend\nval = @current_token.literal.to_i\nif val.nil?\n  self.add_error(\"could not parse integer\")\nend\nreturn AST::IntegerLiteral.new(@current_token, val)\n"}},{"id":"parse_prefix_expression:AST::Expression?-instance-method","html_id":"parse_prefix_expression:AST::Expression?-instance-method","name":"parse_prefix_expression","doc":"Parse a prefix expression, eg. !true, -5","summary":"<p>Parse a prefix expression, eg.</p>","abstract":false,"args":[],"args_string":" : AST::Expression?","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/parser/parser.cr#L342","def":{"name":"parse_prefix_expression","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AST::Expression | ::Nil","visibility":"Public","body":"cur_token = @current_token\nself.next_token\nexp = self.parse_expression(OperatorPrecedence::PREFIX)\nif exp.nil?\n  return nil\nend\nreturn Azula::AST::Prefix.new(cur_token, cur_token.literal, exp.not_nil!)\n"}},{"id":"parse_program:AST::Program-instance-method","html_id":"parse_program:AST::Program-instance-method","name":"parse_program","doc":"Parse an entire program","summary":"<p>Parse an entire program</p>","abstract":false,"args":[],"args_string":" : AST::Program","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/parser/parser.cr#L128","def":{"name":"parse_program","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AST::Program","visibility":"Public","body":"statements = [] of AST::Statement\nwhile @current_token.type != TokenType::EOF\n  stmt = self.parse_statement\n  if !stmt.nil?\n    statements << stmt\n  else\n    return AST::Program.new(statements)\n  end\n  self.next_token\nend\nreturn AST::Program.new(statements)\n"}},{"id":"parse_return_statement:AST::Return?-instance-method","html_id":"parse_return_statement:AST::Return?-instance-method","name":"parse_return_statement","doc":"Parse a return statement, for returning a value from a function","summary":"<p>Parse a return statement, for returning a value from a function</p>","abstract":false,"args":[],"args_string":" : AST::Return?","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/parser/parser.cr#L320","def":{"name":"parse_return_statement","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AST::Return | ::Nil","visibility":"Public","body":"tok = @current_token\nvalues = self.parse_expression_list(TokenType::SEMICOLON)\nreturn AST::Return.new(tok, values)\n"}},{"id":"parse_statement:AST::Statement?-instance-method","html_id":"parse_statement:AST::Statement?-instance-method","name":"parse_statement","doc":"Parse a statement - something that has no return","summary":"<p>Parse a statement - something that has no return</p>","abstract":false,"args":[],"args_string":" : AST::Statement?","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/parser/parser.cr#L143","def":{"name":"parse_statement","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AST::Statement | ::Nil","visibility":"Public","body":"case @current_token.type\nwhen TokenType::TYPE\n  return self.parse_assign_statement\nwhen TokenType::IDENTIFIER\n  if @peek_token.type == TokenType::ASSIGN\n    return self.parse_assign_statement\n  end\nwhen TokenType::RETURN\n  return self.parse_return_statement\nwhen TokenType::FUNCTION\n  return self.parse_function_statement\nwhen TokenType::STRUCT\n  return self.parse_struct\nwhen TokenType::COLON\n  self.next_token\n  return self.parse_assign_statement\nwhen TokenType::IF\n  return self.parse_if_statement(true)\nwhen TokenType::WHILE\n  return self.parse_while_loop\nend\ncase @peek_token.type\nwhen TokenType::COMMA\n  return self.parse_assign_statement\nelse\n  return self.parse_expression_statement\nend\n"}},{"id":"parse_string_literal:AST::StringLiteral-instance-method","html_id":"parse_string_literal:AST::StringLiteral-instance-method","name":"parse_string_literal","doc":"Parse a string literal, eg. \"hello world\"","summary":"<p>Parse a string literal, eg.</p>","abstract":false,"args":[],"args_string":" : AST::StringLiteral","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/parser/parser.cr#L288","def":{"name":"parse_string_literal","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AST::StringLiteral","visibility":"Public","body":"return AST::StringLiteral.new(@current_token, @current_token.literal)"}},{"id":"parse_struct:AST::Struct?-instance-method","html_id":"parse_struct:AST::Struct?-instance-method","name":"parse_struct","doc":"Parse a struct definition","summary":"<p>Parse a struct definition</p>","abstract":false,"args":[],"args_string":" : AST::Struct?","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/parser/parser.cr#L492","def":{"name":"parse_struct","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AST::Struct | ::Nil","visibility":"Public","body":"tok = @current_token\nself.next_token\nname = AST::Identifier.new(@current_token, @current_token.literal)\nfields = [] of AST::TypedIdentifier\nexpect_peek_return(LBRACE)\nwhile @peek_token.type != TokenType::RBRACE\n  self.next_token\n  exp = self.parse_typed_identifier\n  nil_return(exp)\n  fields << exp.not_nil!\n  if @peek_token.type != TokenType::COMMA\n    break\n  end\n  self.next_token\nend\nexpect_peek_return(RBRACE)\nreturn AST::Struct.new(tok, name, fields)\n"}},{"id":"parse_struct_access(s:AST::Expression):AST::StructAccess-instance-method","html_id":"parse_struct_access(s:AST::Expression):AST::StructAccess-instance-method","name":"parse_struct_access","doc":"Parse the accessing of a field inside a struct, eg. p.name","summary":"<p>Parse the accessing of a field inside a struct, eg.</p>","abstract":false,"args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":"AST::Expression"}],"args_string":"(s : AST::Expression) : AST::StructAccess","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/parser/parser.cr#L586","def":{"name":"parse_struct_access","args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":"AST::Expression"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AST::StructAccess","visibility":"Public","body":"tok = @current_token\nself.next_token\nfield = AST::Identifier.new(@current_token, @current_token.literal)\nreturn AST::StructAccess.new(tok, s, field)\n"}},{"id":"parse_struct_initialising(struct_ident:AST::Expression):AST::Expression?-instance-method","html_id":"parse_struct_initialising(struct_ident:AST::Expression):AST::Expression?-instance-method","name":"parse_struct_initialising","doc":"Parse the initialising of a struct, eg. Person{5, 2}","summary":"<p>Parse the initialising of a struct, eg.</p>","abstract":false,"args":[{"name":"struct_ident","doc":null,"default_value":"","external_name":"struct_ident","restriction":"AST::Expression"}],"args_string":"(struct_ident : AST::Expression) : AST::Expression?","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/parser/parser.cr#L517","def":{"name":"parse_struct_initialising","args":[{"name":"struct_ident","doc":null,"default_value":"","external_name":"struct_ident","restriction":"AST::Expression"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AST::Expression | ::Nil","visibility":"Public","body":"struct_ident = struct_ident.as?(AST::Identifier)\nnil_return(struct_ident)\ntok = @current_token\nargs = self.parse_expression_list(TokenType::RBRACE)\nnil_return(args)\nreturn AST::StructInitialise.new(tok, struct_ident, args)\n"}},{"id":"parse_typed_identifier:AST::TypedIdentifier?-instance-method","html_id":"parse_typed_identifier:AST::TypedIdentifier?-instance-method","name":"parse_typed_identifier","doc":"Parse a typed identifier, eg. int x, string y","summary":"<p>Parse a typed identifier, eg.</p>","abstract":false,"args":[],"args_string":" : AST::TypedIdentifier?","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/parser/parser.cr#L275","def":{"name":"parse_typed_identifier","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AST::TypedIdentifier | ::Nil","visibility":"Public","body":"assign_token = @current_token\ntype = Types::Type.parse?(@current_token.literal)\nif type.nil?\n  type = @current_token.literal\nend\nexpect_peek_return(IDENTIFIER)\nreturn AST::TypedIdentifier.new(@current_token, @current_token.literal, type)\n"}},{"id":"parse_while_loop:AST::While?-instance-method","html_id":"parse_while_loop:AST::While?-instance-method","name":"parse_while_loop","doc":"Parse a while loop","summary":"<p>Parse a while loop</p>","abstract":false,"args":[],"args_string":" : AST::While?","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/parser/parser.cr#L570","def":{"name":"parse_while_loop","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AST::While | ::Nil","visibility":"Public","body":"tok = @current_token\nexpect_peek_return(LBRACKET)\nself.next_token\nexp = self.parse_expression(OperatorPrecedence::LOWEST, TokenType::RBRACKET)\nnil_return(exp)\nexpect_peek_return(RBRACKET)\nexpect_peek_return(LBRACE)\nbody = self.parse_block_statement\nnil_return(body)\nreturn AST::While.new(tok, exp, body)\n"}},{"id":"token_precedence(type:TokenType)-instance-method","html_id":"token_precedence(type:TokenType)-instance-method","name":"token_precedence","doc":"Returns the operator precedence of a token","summary":"<p>Returns the operator precedence of a token</p>","abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"TokenType"}],"args_string":"(type : TokenType)","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/parser/parser.cr#L595","def":{"name":"token_precedence","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"TokenType"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"OperatorPrecedence\npre = Precedences.fetch(type, nil)\nif pre.nil?\n  return OperatorPrecedence::LOWEST\nend\nreturn pre\n"}}],"macros":[],"types":[]},{"html_id":"github.com/OisinA/AzulaCr/Azula/Token","path":"Azula/Token.html","kind":"class","full_name":"Azula::Token","name":"Token","abstract":false,"superclass":{"html_id":"github.com/OisinA/AzulaCr/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/OisinA/AzulaCr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/OisinA/AzulaCr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"azula/token/token.cr","line_number":107,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/token/token.cr"}],"repository_name":"github.com/OisinA/AzulaCr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/OisinA/AzulaCr/Azula","kind":"module","full_name":"Azula","name":"Azula"},"doc":"Token represents a syntax token used to generate the AST","summary":"<p>Token represents a syntax token used to generate the AST</p>","class_methods":[],"constructors":[{"id":"new(type:TokenType,literal:String,file:String,linenumber:Int32,charnumber:Int32)-class-method","html_id":"new(type:TokenType,literal:String,file:String,linenumber:Int32,charnumber:Int32)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"TokenType"},{"name":"literal","doc":null,"default_value":"","external_name":"literal","restriction":"String"},{"name":"file","doc":null,"default_value":"","external_name":"file","restriction":"String"},{"name":"linenumber","doc":null,"default_value":"","external_name":"linenumber","restriction":"Int32"},{"name":"charnumber","doc":null,"default_value":"","external_name":"charnumber","restriction":"Int32"}],"args_string":"(type : TokenType, literal : String, file : String, linenumber : Int32, charnumber : Int32)","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/token/token.cr#L109","def":{"name":"new","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"TokenType"},{"name":"literal","doc":null,"default_value":"","external_name":"literal","restriction":"String"},{"name":"file","doc":null,"default_value":"","external_name":"file","restriction":"String"},{"name":"linenumber","doc":null,"default_value":"","external_name":"linenumber","restriction":"Int32"},{"name":"charnumber","doc":null,"default_value":"","external_name":"charnumber","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(type, literal, file, linenumber, charnumber)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"charnumber:Int32-instance-method","html_id":"charnumber:Int32-instance-method","name":"charnumber","doc":"Get the character position of this token in the line","summary":"<p>Get the character position of this token in the line</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/token/token.cr#L126","def":{"name":"charnumber","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@charnumber"}},{"id":"file:String-instance-method","html_id":"file:String-instance-method","name":"file","doc":"Get which file this Token is in","summary":"<p>Get which file this Token is in</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/token/token.cr#L122","def":{"name":"file","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@file"}},{"id":"linenumber:Int32-instance-method","html_id":"linenumber:Int32-instance-method","name":"linenumber","doc":"Get the line number this Token is on","summary":"<p>Get the line number this Token is on</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/token/token.cr#L124","def":{"name":"linenumber","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@linenumber"}},{"id":"literal:String-instance-method","html_id":"literal:String-instance-method","name":"literal","doc":"Get the literal string of this Token","summary":"<p>Get the literal string of this Token</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/token/token.cr#L120","def":{"name":"literal","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@literal"}},{"id":"to_string:String-instance-method","html_id":"to_string:String-instance-method","name":"to_string","doc":"Get the string representation of this Token","summary":"<p>Get the string representation of this Token</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/token/token.cr#L113","def":{"name":"to_string","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"return \"Token #{@type} (#{@literal}) in #{@file} line #{@linenumber}, character #{@charnumber}\""}},{"id":"type:Azula::TokenType-instance-method","html_id":"type:Azula::TokenType-instance-method","name":"type","doc":"Get the `TokenType` of this Token","summary":"<p>Get the <code><a href=\"../Azula/TokenType.html\">TokenType</a></code> of this Token</p>","abstract":false,"args":[],"args_string":" : Azula::TokenType","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/token/token.cr#L118","def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@type"}}],"macros":[],"types":[]},{"html_id":"github.com/OisinA/AzulaCr/Azula/TokenType","path":"Azula/TokenType.html","kind":"enum","full_name":"Azula::TokenType","name":"TokenType","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/OisinA/AzulaCr/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"github.com/OisinA/AzulaCr/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/OisinA/AzulaCr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/OisinA/AzulaCr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"azula/token/token.cr","line_number":3,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/token/token.cr"}],"repository_name":"github.com/OisinA/AzulaCr","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"ILLEGAL","name":"ILLEGAL","value":"0","doc":"Illegal is used for any undefined tokens","summary":"<p>Illegal is used for any undefined tokens</p>"},{"id":"EOF","name":"EOF","value":"1","doc":"Signifies the end of a file","summary":"<p>Signifies the end of a file</p>"},{"id":"TYPE","name":"TYPE","value":"2","doc":"Identifier of type eg. int, string","summary":"<p>Identifier of type eg.</p>"},{"id":"ASSIGN","name":"ASSIGN","value":"3","doc":"Used to assign a variable name to value","summary":"<p>Used to assign a variable name to value</p>"},{"id":"COLON","name":"COLON","value":"4","doc":"Used to indicate a return type","summary":"<p>Used to indicate a return type</p>"},{"id":"SEMICOLON","name":"SEMICOLON","value":"5","doc":"Used to indicate end of a line","summary":"<p>Used to indicate end of a line</p>"},{"id":"DOT","name":"DOT","value":"6","doc":"Used for floats and accessing structs","summary":"<p>Used for floats and accessing structs</p>"},{"id":"IDENTIFIER","name":"IDENTIFIER","value":"7","doc":"Used for variable/function names","summary":"<p>Used for variable/function names</p>"},{"id":"FUNCTION","name":"FUNCTION","value":"8","doc":"Used to initialise a function","summary":"<p>Used to initialise a function</p>"},{"id":"RETURN","name":"RETURN","value":"9","doc":"Used to return a value from a function","summary":"<p>Used to return a value from a function</p>"},{"id":"COMMA","name":"COMMA","value":"10","doc":"Used to separate terms","summary":"<p>Used to separate terms</p>"},{"id":"STRING","name":"STRING","value":"11","doc":"Used for string literals","summary":"<p>Used for string literals</p>"},{"id":"NUMBER","name":"NUMBER","value":"12","doc":"Used for number literals","summary":"<p>Used for number literals</p>"},{"id":"AS","name":"AS","value":"13","doc":"Used to cast one type to another","summary":"<p>Used to cast one type to another</p>"},{"id":"STRUCT","name":"STRUCT","value":"14","doc":"Used to create a struct","summary":"<p>Used to create a struct</p>"},{"id":"MACRO","name":"MACRO","value":"15","doc":"Used to declare a macro","summary":"<p>Used to declare a macro</p>"},{"id":"TRUE","name":"TRUE","value":"16","doc":"True","summary":"<p>True</p>"},{"id":"FALSE","name":"FALSE","value":"17","doc":"False","summary":"<p>False</p>"},{"id":"NULL","name":"NULL","value":"18","doc":"Null","summary":"<p>Null</p>"},{"id":"PLUS","name":"PLUS","value":"19","doc":"+","summary":"<p>+</p>"},{"id":"MINUS","name":"MINUS","value":"20","doc":"-","summary":"<p>-</p>"},{"id":"ASTERISK","name":"ASTERISK","value":"21","doc":"*","summary":"<p>*</p>"},{"id":"EXPONENT","name":"EXPONENT","value":"22","doc":"**","summary":"<p>**</p>"},{"id":"SLASH","name":"SLASH","value":"23","doc":"/","summary":"<p>/</p>"},{"id":"MODULO","name":"MODULO","value":"24","doc":"%","summary":"<p>%</p>"},{"id":"EQ","name":"EQ","value":"25","doc":"Equality","summary":"<p>Equality</p>"},{"id":"NOT_EQ","name":"NOT_EQ","value":"26","doc":"Inequality","summary":"<p>Inequality</p>"},{"id":"LT","name":"LT","value":"27","doc":"Less than","summary":"<p>Less than</p>"},{"id":"GT","name":"GT","value":"28","doc":"Greater than","summary":"<p>Greater than</p>"},{"id":"LT_EQ","name":"LT_EQ","value":"29","doc":"Less than or equal","summary":"<p>Less than or equal</p>"},{"id":"GT_EQ","name":"GT_EQ","value":"30","doc":"Greater than or equal","summary":"<p>Greater than or equal</p>"},{"id":"OR","name":"OR","value":"31","doc":"Logical OR","summary":"<p>Logical OR</p>"},{"id":"AND","name":"AND","value":"32","doc":"Logical AND","summary":"<p>Logical AND</p>"},{"id":"NOT","name":"NOT","value":"33","doc":"Logical NOT","summary":"<p>Logical NOT</p>"},{"id":"IF","name":"IF","value":"34","doc":"Conditionals","summary":"<p>Conditionals</p>"},{"id":"ELSEIF","name":"ELSEIF","value":"35","doc":null,"summary":null},{"id":"ELSE","name":"ELSE","value":"36","doc":null,"summary":null},{"id":"SWITCH","name":"SWITCH","value":"37","doc":"Switch statement","summary":"<p>Switch statement</p>"},{"id":"DEFAULT","name":"DEFAULT","value":"38","doc":"Default statement in switch","summary":"<p>Default statement in switch</p>"},{"id":"WHILE","name":"WHILE","value":"39","doc":"While loop","summary":"<p>While loop</p>"},{"id":"LBRACKET","name":"LBRACKET","value":"40","doc":"(","summary":"<p>(</p>"},{"id":"RBRACKET","name":"RBRACKET","value":"41","doc":")","summary":"<p>)</p>"},{"id":"LBRACE","name":"LBRACE","value":"42","doc":"{","summary":"<p>{</p>"},{"id":"RBRACE","name":"RBRACE","value":"43","doc":"}","summary":"<p>}</p>"},{"id":"LSQUARE","name":"LSQUARE","value":"44","doc":"[","summary":"<p>[</p>"},{"id":"RSQUARE","name":"RSQUARE","value":"45","doc":"]","summary":"<p>]</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/OisinA/AzulaCr/Azula","kind":"module","full_name":"Azula","name":"Azula"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"and?-instance-method","html_id":"and?-instance-method","name":"and?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/token/token.cr#L74","def":{"name":"and?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == AND"}},{"id":"as?-instance-method","html_id":"as?-instance-method","name":"as?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/token/token.cr#L32","def":{"name":"as?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == AS"}},{"id":"assign?-instance-method","html_id":"assign?-instance-method","name":"assign?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/token/token.cr#L12","def":{"name":"assign?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == ASSIGN"}},{"id":"asterisk?-instance-method","html_id":"asterisk?-instance-method","name":"asterisk?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/token/token.cr#L50","def":{"name":"asterisk?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == ASTERISK"}},{"id":"colon?-instance-method","html_id":"colon?-instance-method","name":"colon?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/token/token.cr#L14","def":{"name":"colon?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == COLON"}},{"id":"comma?-instance-method","html_id":"comma?-instance-method","name":"comma?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/token/token.cr#L26","def":{"name":"comma?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == COMMA"}},{"id":"default?-instance-method","html_id":"default?-instance-method","name":"default?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/token/token.cr#L86","def":{"name":"default?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == DEFAULT"}},{"id":"dot?-instance-method","html_id":"dot?-instance-method","name":"dot?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/token/token.cr#L18","def":{"name":"dot?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == DOT"}},{"id":"else?-instance-method","html_id":"else?-instance-method","name":"else?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/token/token.cr#L81","def":{"name":"else?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == ELSE"}},{"id":"elseif?-instance-method","html_id":"elseif?-instance-method","name":"elseif?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/token/token.cr#L80","def":{"name":"elseif?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == ELSEIF"}},{"id":"eof?-instance-method","html_id":"eof?-instance-method","name":"eof?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/token/token.cr#L7","def":{"name":"eof?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == EOF"}},{"id":"eq?-instance-method","html_id":"eq?-instance-method","name":"eq?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/token/token.cr#L59","def":{"name":"eq?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == EQ"}},{"id":"exponent?-instance-method","html_id":"exponent?-instance-method","name":"exponent?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/token/token.cr#L52","def":{"name":"exponent?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == EXPONENT"}},{"id":"false?-instance-method","html_id":"false?-instance-method","name":"false?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/token/token.cr#L41","def":{"name":"false?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == FALSE"}},{"id":"function?-instance-method","html_id":"function?-instance-method","name":"function?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/token/token.cr#L22","def":{"name":"function?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == FUNCTION"}},{"id":"gt?-instance-method","html_id":"gt?-instance-method","name":"gt?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/token/token.cr#L65","def":{"name":"gt?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == GT"}},{"id":"gt_eq?-instance-method","html_id":"gt_eq?-instance-method","name":"gt_eq?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/token/token.cr#L69","def":{"name":"gt_eq?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == GT_EQ"}},{"id":"identifier?-instance-method","html_id":"identifier?-instance-method","name":"identifier?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/token/token.cr#L20","def":{"name":"identifier?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == IDENTIFIER"}},{"id":"if?-instance-method","html_id":"if?-instance-method","name":"if?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/token/token.cr#L79","def":{"name":"if?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == IF"}},{"id":"illegal?-instance-method","html_id":"illegal?-instance-method","name":"illegal?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/token/token.cr#L5","def":{"name":"illegal?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == ILLEGAL"}},{"id":"lbrace?-instance-method","html_id":"lbrace?-instance-method","name":"lbrace?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/token/token.cr#L96","def":{"name":"lbrace?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == LBRACE"}},{"id":"lbracket?-instance-method","html_id":"lbracket?-instance-method","name":"lbracket?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/token/token.cr#L92","def":{"name":"lbracket?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == LBRACKET"}},{"id":"lsquare?-instance-method","html_id":"lsquare?-instance-method","name":"lsquare?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/token/token.cr#L100","def":{"name":"lsquare?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == LSQUARE"}},{"id":"lt?-instance-method","html_id":"lt?-instance-method","name":"lt?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/token/token.cr#L63","def":{"name":"lt?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == LT"}},{"id":"lt_eq?-instance-method","html_id":"lt_eq?-instance-method","name":"lt_eq?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/token/token.cr#L67","def":{"name":"lt_eq?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == LT_EQ"}},{"id":"macro?-instance-method","html_id":"macro?-instance-method","name":"macro?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/token/token.cr#L36","def":{"name":"macro?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == MACRO"}},{"id":"minus?-instance-method","html_id":"minus?-instance-method","name":"minus?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/token/token.cr#L48","def":{"name":"minus?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == MINUS"}},{"id":"modulo?-instance-method","html_id":"modulo?-instance-method","name":"modulo?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/token/token.cr#L56","def":{"name":"modulo?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == MODULO"}},{"id":"not?-instance-method","html_id":"not?-instance-method","name":"not?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/token/token.cr#L76","def":{"name":"not?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == NOT"}},{"id":"not_eq?-instance-method","html_id":"not_eq?-instance-method","name":"not_eq?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/token/token.cr#L61","def":{"name":"not_eq?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == NOT_EQ"}},{"id":"null?-instance-method","html_id":"null?-instance-method","name":"null?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/token/token.cr#L43","def":{"name":"null?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == NULL"}},{"id":"number?-instance-method","html_id":"number?-instance-method","name":"number?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/token/token.cr#L30","def":{"name":"number?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == NUMBER"}},{"id":"or?-instance-method","html_id":"or?-instance-method","name":"or?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/token/token.cr#L72","def":{"name":"or?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == OR"}},{"id":"plus?-instance-method","html_id":"plus?-instance-method","name":"plus?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/token/token.cr#L46","def":{"name":"plus?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == PLUS"}},{"id":"rbrace?-instance-method","html_id":"rbrace?-instance-method","name":"rbrace?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/token/token.cr#L98","def":{"name":"rbrace?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == RBRACE"}},{"id":"rbracket?-instance-method","html_id":"rbracket?-instance-method","name":"rbracket?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/token/token.cr#L94","def":{"name":"rbracket?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == RBRACKET"}},{"id":"return?-instance-method","html_id":"return?-instance-method","name":"return?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/token/token.cr#L24","def":{"name":"return?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == RETURN"}},{"id":"rsquare?-instance-method","html_id":"rsquare?-instance-method","name":"rsquare?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/token/token.cr#L102","def":{"name":"rsquare?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == RSQUARE"}},{"id":"semicolon?-instance-method","html_id":"semicolon?-instance-method","name":"semicolon?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/token/token.cr#L16","def":{"name":"semicolon?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == SEMICOLON"}},{"id":"slash?-instance-method","html_id":"slash?-instance-method","name":"slash?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/token/token.cr#L54","def":{"name":"slash?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == SLASH"}},{"id":"string?-instance-method","html_id":"string?-instance-method","name":"string?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/token/token.cr#L28","def":{"name":"string?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == STRING"}},{"id":"struct?-instance-method","html_id":"struct?-instance-method","name":"struct?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/token/token.cr#L34","def":{"name":"struct?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == STRUCT"}},{"id":"switch?-instance-method","html_id":"switch?-instance-method","name":"switch?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/token/token.cr#L84","def":{"name":"switch?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == SWITCH"}},{"id":"true?-instance-method","html_id":"true?-instance-method","name":"true?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/token/token.cr#L39","def":{"name":"true?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == TRUE"}},{"id":"type?-instance-method","html_id":"type?-instance-method","name":"type?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/token/token.cr#L10","def":{"name":"type?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == TYPE"}},{"id":"while?-instance-method","html_id":"while?-instance-method","name":"while?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/token/token.cr#L89","def":{"name":"while?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == WHILE"}}],"macros":[],"types":[]},{"html_id":"github.com/OisinA/AzulaCr/Azula/Types","path":"Azula/Types.html","kind":"module","full_name":"Azula::Types","name":"Types","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"azula/types/types.cr","line_number":3,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/types/types.cr"},{"filename":"azula/types/typechecker.cr","line_number":16,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/types/typechecker.cr"}],"repository_name":"github.com/OisinA/AzulaCr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/OisinA/AzulaCr/Azula","kind":"module","full_name":"Azula","name":"Azula"},"doc":null,"summary":null,"class_methods":[{"id":"type_from_string(s:String):Type?-class-method","html_id":"type_from_string(s:String):Type?-class-method","name":"type_from_string","doc":null,"summary":null,"abstract":false,"args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":"String"}],"args_string":"(s : String) : Type?","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/types/types.cr#L13","def":{"name":"type_from_string","args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Type | ::Nil","visibility":"Public","body":"case s\nwhen \"int\"\n  return Type::INT\nwhen \"float\"\n  return Type::FLOAT\nwhen \"string\"\n  return Type::STRING\nwhen \"bool\"\n  return Type::BOOL\nwhen \"void\"\n  return Type::VOID\nwhen \"error\"\n  return Type::ERROR\nend"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/OisinA/AzulaCr/Azula/Types/Type","path":"Azula/Types/Type.html","kind":"enum","full_name":"Azula::Types::Type","name":"Type","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/OisinA/AzulaCr/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"github.com/OisinA/AzulaCr/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/OisinA/AzulaCr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/OisinA/AzulaCr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"azula/types/types.cr","line_number":4,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/types/types.cr"}],"repository_name":"github.com/OisinA/AzulaCr","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"INT","name":"INT","value":"0","doc":null,"summary":null},{"id":"FLOAT","name":"FLOAT","value":"1","doc":null,"summary":null},{"id":"STRING","name":"STRING","value":"2","doc":null,"summary":null},{"id":"BOOL","name":"BOOL","value":"3","doc":null,"summary":null},{"id":"VOID","name":"VOID","value":"4","doc":null,"summary":null},{"id":"ERROR","name":"ERROR","value":"5","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/OisinA/AzulaCr/Azula/Types","kind":"module","full_name":"Azula::Types","name":"Types"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"bool?-instance-method","html_id":"bool?-instance-method","name":"bool?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/types/types.cr#L8","def":{"name":"bool?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == BOOL"}},{"id":"error?-instance-method","html_id":"error?-instance-method","name":"error?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/types/types.cr#L10","def":{"name":"error?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == ERROR"}},{"id":"float?-instance-method","html_id":"float?-instance-method","name":"float?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/types/types.cr#L6","def":{"name":"float?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == FLOAT"}},{"id":"int?-instance-method","html_id":"int?-instance-method","name":"int?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/types/types.cr#L5","def":{"name":"int?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == INT"}},{"id":"string?-instance-method","html_id":"string?-instance-method","name":"string?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/types/types.cr#L7","def":{"name":"string?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == STRING"}},{"id":"void?-instance-method","html_id":"void?-instance-method","name":"void?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/types/types.cr#L9","def":{"name":"void?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == VOID"}}],"macros":[],"types":[]},{"html_id":"github.com/OisinA/AzulaCr/Azula/Types/Typechecker","path":"Azula/Types/Typechecker.html","kind":"class","full_name":"Azula::Types::Typechecker","name":"Typechecker","abstract":false,"superclass":{"html_id":"github.com/OisinA/AzulaCr/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/OisinA/AzulaCr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/OisinA/AzulaCr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"azula/types/typechecker.cr","line_number":18,"url":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/types/typechecker.cr"}],"repository_name":"github.com/OisinA/AzulaCr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/OisinA/AzulaCr/Azula/Types","kind":"module","full_name":"Azula::Types","name":"Types"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/types/typechecker.cr#L28","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"add_error(s:String,token:Token)-instance-method","html_id":"add_error(s:String,token:Token)-instance-method","name":"add_error","doc":null,"summary":null,"abstract":false,"args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":"String"},{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":"Token"}],"args_string":"(s : String, token : Token)","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/types/typechecker.cr#L242","def":{"name":"add_error","args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":"String"},{"name":"token","doc":null,"default_value":"","external_name":"token","restriction":"Token"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@errors << \"#{s} (file #{token.file}, line #{token.linenumber}, char #{token.charnumber})\""}},{"id":"check(node:AST::Node)-instance-method","html_id":"check(node:AST::Node)-instance-method","name":"check","doc":null,"summary":null,"abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Node"}],"args_string":"(node : AST::Node)","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/types/typechecker.cr#L43","def":{"name":"check","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"::Union(Array(Type | String), ::Nil)\ncase node\nwhen .is_a?(AST::Program)\n  convert_and_check_nil(Program)\n  node.statements.not_nil!.each do |stmt|\n    val = self.check(stmt)\n    return_if_nil(val)\n    if (val.size == 0) || (val[0] == Type::VOID)\n      next\n    end\n    return val\n  end\n  return [Type::VOID]\nwhen .is_a?(AST::Block)\n  convert_and_check_nil(Block)\n  node.statements.each do |stmt|\n    val = self.check(stmt)\n    return_if_nil(val)\n    if val.size == 0\n      next\n    end\n    return val\n  end\n  return [Type::VOID]\nwhen .is_a?(AST::IntegerLiteral)\n  return [Type::INT]\nwhen .is_a?(AST::StringLiteral)\n  return [Type::STRING]\nwhen .is_a?(AST::FloatLiteral)\n  return [Type::FLOAT]\nwhen .is_a?(AST::BooleanLiteral)\n  return [Type::BOOL]\nwhen .is_a?(AST::Struct)\n  convert_and_check_nil(Struct)\n  fields = {} of String => Type | String\n  node.fields.each do |f|\n    fi = self.check(f)\n    return_if_nil(fi)\n    fields[f.ident] = fi[0]\n  end\n  @structs[node.struct_name.ident] = fields\n  return [Type::VOID]\nwhen .is_a?(AST::StructInitialise)\n  convert_and_check_nil(StructInitialise)\n  name = node.struct_name.ident\n  str = @structs.fetch(name, nil)\n  if str.nil?\n    self.add_error(\"undefined struct #{name}\", node.token)\n    return\n  end\n  if node.values.size != str.values.size\n    self.add_error(\"incorrect number of attributes in struct, need #{str.values.size}, got #{node.values.size}\", node.token)\n    return\n  end\n  val_types = [] of Type | String\n  node.values.each do |val|\n    v = self.check(val)\n    return_if_nil(v)\n    val_types << v[0]\n  end\n  str.values.size.times do |i|\n    if str.values[i] != val_types[i]\n      self.add_error(\"incorrect type in struct initialisation, cannot assign #{val_types[i]} to type #{str.values[i]}\", node.token)\n      return\n    end\n  end\n  return [name]\nwhen .is_a?(AST::ExpressionStatement)\n  convert_and_check_nil(ExpressionStatement)\n  self.check(node.expression)\n  return [Type::VOID]\nwhen .is_a?(AST::Identifier)\n  convert_and_check_nil(Identifier)\n  type = @variables.fetch(node.ident, nil)\n  if type.nil?\n    self.add_error(\"undefined variable #{node.ident}\", node.token)\n    return [Type::VOID]\n  end\n  return [type]\nwhen .is_a?(AST::TypedIdentifier)\n  convert_and_check_nil(TypedIdentifier)\n  return [node.type]\nwhen .is_a?(AST::Assign)\n  convert_and_check_nil(Assign)\n  val_types = [] of Type | String\n  node.values.each do |val|\n    v = self.check(val)\n    return_if_nil(v)\n    val_types = val_types + v\n  end\n  ident_types = [] of Type | String\n  node.idents.each do |val|\n    v = self.check(val)\n    return_if_nil(v)\n    ident_types = ident_types + v\n  end\n  if val_types.size != ident_types.size\n    self.add_error(\"incorrect number of values in assign statement\", node.token)\n    return [Type::VOID]\n  end\n  val_types.size.times do |i|\n    if val_types[i] != ident_types[i]\n      self.add_error(\"incorrect value in assign statement, trying to assign #{val_types[i]} to variable of type #{ident_types[i]}\", node.token)\n      return [Type::VOID]\n    end\n  end\n  node.idents.each do |val|\n    val = val.as?(AST::TypedIdentifier)\n    if val.nil?\n      next\n    end\n    @variables[val.ident] = val.type\n  end\n  return [Type::VOID]\nwhen .is_a?(AST::Return)\n  convert_and_check_nil(Return)\n  vals = [] of Type | String\n  node.values.each do |val|\n    t = self.check(val)\n    return_if_nil(t)\n    vals << t[0]\n  end\n  return vals\nwhen .is_a?(AST::Function)\n  convert_and_check_nil(Function)\n  old_vars = @variables\n  params = [] of Type | String\n  node.parameters.each do |param|\n    type = self.check(param)\n    return_if_nil(type)\n    if !(self.is_valid_type(type[0]))\n      self.add_error(\"undefined struct #{type[0]}\", node.token)\n      return\n    end\n    params << type[0]\n    @variables[param.ident] = type[0]\n  end\n  @function_args[node.function_name.ident] = params\n  body_return = self.check(node.body)\n  return_if_nil(body_return)\n  if body_return.size != node.return_types.size\n    self.add_error(\"incorrect number of return values, got #{body_return.size}, want #{node.return_types.size}\", node.token)\n    return\n  end\n  body_return.size.times do |i|\n    if body_return[i] != node.return_types[i]\n      self.add_error(\"cannot return #{body_return[i]}, requires #{node.return_types[i]}\", node.token)\n      return\n    end\n  end\n  @function_returns[node.function_name.ident] = node.return_types\n  @variables = old_vars\n  return [Type::VOID]\nwhen .is_a?(AST::FunctionCall)\n  convert_and_check_nil(FunctionCall)\n  name = node.function_name.ident\n  str = @function_returns.fetch(name, nil)\n  if str.nil?\n    self.add_error(\"undefined function #{name}\", node.token)\n    return\n  end\n  args = [] of Type | String\n  node.arguments.each do |arg|\n    t = self.check(arg)\n    return_if_nil(t)\n    args << t[0]\n  end\n  arg_types = @function_args.fetch(name, nil)\n  if arg_types.nil?\n    self.add_error(\"undefined function #{name}\", node.token)\n    return\n  end\n  if args.size != arg_types.size\n    self.add_error(\"incorrect number of arguments, got #{args.size}, want #{arg_types.size}\", node.token)\n    return\n  end\n  args.size.times do |i|\n    if args[i] != arg_types[i]\n      self.add_error(\"cannot assign #{args[i]} to argument of type #{arg_types[i]}\", node.token)\n      return\n    end\n  end\n  return str\nelse\n  return [Type::VOID]\nend\n"}},{"id":"errors:Array(String)-instance-method","html_id":"errors:Array(String)-instance-method","name":"errors","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/types/typechecker.cr#L26","def":{"name":"errors","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@errors"}},{"id":"is_valid_type(s:String|Type)-instance-method","html_id":"is_valid_type(s:String|Type)-instance-method","name":"is_valid_type","doc":null,"summary":null,"abstract":false,"args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":"String | Type"}],"args_string":"(s : String | Type)","source_link":"https://github.com/OisinA/AzulaCr/blob/3c5175eb06ddd95f0e86e3429d5f83792ab394dc/src/azula/types/typechecker.cr#L246","def":{"name":"is_valid_type","args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":"String | Type"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"t = s.as?(Type)\nif t.nil?\n  g = @structs.fetch(s, nil)\n  return !g.nil?\nend\nreturn true\n"}}],"macros":[],"types":[]}]}]}]}})